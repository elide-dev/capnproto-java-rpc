// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: test.capnp

package org.capnproto.rpctest;

public final class Test {
  public enum TestEnum {
    FOO,
    BAR,
    BAZ,
    QUX,
    QUUX,
    CORGE,
    GRAULT,
    GARPLY,
    _NOT_IN_SCHEMA,
  }

  public static class TestAllTypes {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)6,(short)20);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestAllTypes.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final org.capnproto.Void getVoidField() {
        return org.capnproto.Void.VOID;
      }
      public final void setVoidField(org.capnproto.Void value) {
      }

      public final boolean getBoolField() {
        return _getBooleanField(0);
      }
      public final void setBoolField(boolean value) {
        _setBooleanField(0, value);
      }

      public final byte getInt8Field() {
        return _getByteField(1);
      }
      public final void setInt8Field(byte value) {
        _setByteField(1, value);
      }

      public final short getInt16Field() {
        return _getShortField(1);
      }
      public final void setInt16Field(short value) {
        _setShortField(1, value);
      }

      public final int getInt32Field() {
        return _getIntField(1);
      }
      public final void setInt32Field(int value) {
        _setIntField(1, value);
      }

      public final long getInt64Field() {
        return _getLongField(1);
      }
      public final void setInt64Field(long value) {
        _setLongField(1, value);
      }

      public final byte getUInt8Field() {
        return _getByteField(16);
      }
      public final void setUInt8Field(byte value) {
        _setByteField(16, value);
      }

      public final short getUInt16Field() {
        return _getShortField(9);
      }
      public final void setUInt16Field(short value) {
        _setShortField(9, value);
      }

      public final int getUInt32Field() {
        return _getIntField(5);
      }
      public final void setUInt32Field(int value) {
        _setIntField(5, value);
      }

      public final long getUInt64Field() {
        return _getLongField(3);
      }
      public final void setUInt64Field(long value) {
        _setLongField(3, value);
      }

      public final float getFloat32Field() {
        return _getFloatField(8);
      }
      public final void setFloat32Field(float value) {
        _setFloatField(8, value);
      }

      public final double getFloat64Field() {
        return _getDoubleField(5);
      }
      public final void setFloat64Field(double value) {
        _setDoubleField(5, value);
      }

      public final boolean hasTextField() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTextField() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTextField(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTextField(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTextField(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean hasDataField() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.Data.Builder getDataField() {
        return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
      }
      public final void setDataField(org.capnproto.Data.Reader value) {
        _setPointerField(org.capnproto.Data.factory, 1, value);
      }
      public final void setDataField(byte [] value) {
        _setPointerField(org.capnproto.Data.factory, 1, new org.capnproto.Data.Reader(value));
      }
      public final org.capnproto.Data.Builder initDataField(int size) {
        return _initPointerField(org.capnproto.Data.factory, 1, size);
      }
      public final org.capnproto.rpctest.Test.TestAllTypes.Builder getStructField() {
        return _getPointerField(org.capnproto.rpctest.Test.TestAllTypes.factory, 2, null, 0);
      }
      public final void setStructField(org.capnproto.rpctest.Test.TestAllTypes.Reader value) {
        _setPointerField(org.capnproto.rpctest.Test.TestAllTypes.factory,2, value);
      }
      public final org.capnproto.rpctest.Test.TestAllTypes.Builder initStructField() {
        return _initPointerField(org.capnproto.rpctest.Test.TestAllTypes.factory,2, 0);
      }
      public final org.capnproto.rpctest.Test.TestEnum getEnumField() {
        switch(_getShortField(18)) {
          case 0 : return org.capnproto.rpctest.Test.TestEnum.FOO;
          case 1 : return org.capnproto.rpctest.Test.TestEnum.BAR;
          case 2 : return org.capnproto.rpctest.Test.TestEnum.BAZ;
          case 3 : return org.capnproto.rpctest.Test.TestEnum.QUX;
          case 4 : return org.capnproto.rpctest.Test.TestEnum.QUUX;
          case 5 : return org.capnproto.rpctest.Test.TestEnum.CORGE;
          case 6 : return org.capnproto.rpctest.Test.TestEnum.GRAULT;
          case 7 : return org.capnproto.rpctest.Test.TestEnum.GARPLY;
          default: return org.capnproto.rpctest.Test.TestEnum._NOT_IN_SCHEMA;
        }
      }
      public final void setEnumField(org.capnproto.rpctest.Test.TestEnum value) {
        _setShortField(18, (short)value.ordinal());
      }

      public final org.capnproto.Void getInterfaceField() {
        return org.capnproto.Void.VOID;
      }
      public final void setInterfaceField(org.capnproto.Void value) {
      }

      public final boolean hasVoidList() {
        return !_pointerFieldIsNull(3);
      }
      public final org.capnproto.PrimitiveList.Void.Builder getVoidList() {
        return _getPointerField(org.capnproto.PrimitiveList.Void.factory, 3, null, 0);
      }
      public final void setVoidList(org.capnproto.PrimitiveList.Void.Reader value) {
        _setPointerField(org.capnproto.PrimitiveList.Void.factory, 3, value);
      }
      public final org.capnproto.PrimitiveList.Void.Builder initVoidList(int size) {
        return _initPointerField(org.capnproto.PrimitiveList.Void.factory, 3, size);
      }
      public final boolean hasBoolList() {
        return !_pointerFieldIsNull(4);
      }
      public final org.capnproto.PrimitiveList.Boolean.Builder getBoolList() {
        return _getPointerField(org.capnproto.PrimitiveList.Boolean.factory, 4, null, 0);
      }
      public final void setBoolList(org.capnproto.PrimitiveList.Boolean.Reader value) {
        _setPointerField(org.capnproto.PrimitiveList.Boolean.factory, 4, value);
      }
      public final org.capnproto.PrimitiveList.Boolean.Builder initBoolList(int size) {
        return _initPointerField(org.capnproto.PrimitiveList.Boolean.factory, 4, size);
      }
      public final boolean hasInt8List() {
        return !_pointerFieldIsNull(5);
      }
      public final org.capnproto.PrimitiveList.Byte.Builder getInt8List() {
        return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 5, null, 0);
      }
      public final void setInt8List(org.capnproto.PrimitiveList.Byte.Reader value) {
        _setPointerField(org.capnproto.PrimitiveList.Byte.factory, 5, value);
      }
      public final org.capnproto.PrimitiveList.Byte.Builder initInt8List(int size) {
        return _initPointerField(org.capnproto.PrimitiveList.Byte.factory, 5, size);
      }
      public final boolean hasInt16List() {
        return !_pointerFieldIsNull(6);
      }
      public final org.capnproto.PrimitiveList.Short.Builder getInt16List() {
        return _getPointerField(org.capnproto.PrimitiveList.Short.factory, 6, null, 0);
      }
      public final void setInt16List(org.capnproto.PrimitiveList.Short.Reader value) {
        _setPointerField(org.capnproto.PrimitiveList.Short.factory, 6, value);
      }
      public final org.capnproto.PrimitiveList.Short.Builder initInt16List(int size) {
        return _initPointerField(org.capnproto.PrimitiveList.Short.factory, 6, size);
      }
      public final boolean hasInt32List() {
        return !_pointerFieldIsNull(7);
      }
      public final org.capnproto.PrimitiveList.Int.Builder getInt32List() {
        return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 7, null, 0);
      }
      public final void setInt32List(org.capnproto.PrimitiveList.Int.Reader value) {
        _setPointerField(org.capnproto.PrimitiveList.Int.factory, 7, value);
      }
      public final org.capnproto.PrimitiveList.Int.Builder initInt32List(int size) {
        return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 7, size);
      }
      public final boolean hasInt64List() {
        return !_pointerFieldIsNull(8);
      }
      public final org.capnproto.PrimitiveList.Long.Builder getInt64List() {
        return _getPointerField(org.capnproto.PrimitiveList.Long.factory, 8, null, 0);
      }
      public final void setInt64List(org.capnproto.PrimitiveList.Long.Reader value) {
        _setPointerField(org.capnproto.PrimitiveList.Long.factory, 8, value);
      }
      public final org.capnproto.PrimitiveList.Long.Builder initInt64List(int size) {
        return _initPointerField(org.capnproto.PrimitiveList.Long.factory, 8, size);
      }
      public final boolean hasUInt8List() {
        return !_pointerFieldIsNull(9);
      }
      public final org.capnproto.PrimitiveList.Byte.Builder getUInt8List() {
        return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 9, null, 0);
      }
      public final void setUInt8List(org.capnproto.PrimitiveList.Byte.Reader value) {
        _setPointerField(org.capnproto.PrimitiveList.Byte.factory, 9, value);
      }
      public final org.capnproto.PrimitiveList.Byte.Builder initUInt8List(int size) {
        return _initPointerField(org.capnproto.PrimitiveList.Byte.factory, 9, size);
      }
      public final boolean hasUInt16List() {
        return !_pointerFieldIsNull(10);
      }
      public final org.capnproto.PrimitiveList.Short.Builder getUInt16List() {
        return _getPointerField(org.capnproto.PrimitiveList.Short.factory, 10, null, 0);
      }
      public final void setUInt16List(org.capnproto.PrimitiveList.Short.Reader value) {
        _setPointerField(org.capnproto.PrimitiveList.Short.factory, 10, value);
      }
      public final org.capnproto.PrimitiveList.Short.Builder initUInt16List(int size) {
        return _initPointerField(org.capnproto.PrimitiveList.Short.factory, 10, size);
      }
      public final boolean hasUInt32List() {
        return !_pointerFieldIsNull(11);
      }
      public final org.capnproto.PrimitiveList.Int.Builder getUInt32List() {
        return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 11, null, 0);
      }
      public final void setUInt32List(org.capnproto.PrimitiveList.Int.Reader value) {
        _setPointerField(org.capnproto.PrimitiveList.Int.factory, 11, value);
      }
      public final org.capnproto.PrimitiveList.Int.Builder initUInt32List(int size) {
        return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 11, size);
      }
      public final boolean hasUInt64List() {
        return !_pointerFieldIsNull(12);
      }
      public final org.capnproto.PrimitiveList.Long.Builder getUInt64List() {
        return _getPointerField(org.capnproto.PrimitiveList.Long.factory, 12, null, 0);
      }
      public final void setUInt64List(org.capnproto.PrimitiveList.Long.Reader value) {
        _setPointerField(org.capnproto.PrimitiveList.Long.factory, 12, value);
      }
      public final org.capnproto.PrimitiveList.Long.Builder initUInt64List(int size) {
        return _initPointerField(org.capnproto.PrimitiveList.Long.factory, 12, size);
      }
      public final boolean hasFloat32List() {
        return !_pointerFieldIsNull(13);
      }
      public final org.capnproto.PrimitiveList.Float.Builder getFloat32List() {
        return _getPointerField(org.capnproto.PrimitiveList.Float.factory, 13, null, 0);
      }
      public final void setFloat32List(org.capnproto.PrimitiveList.Float.Reader value) {
        _setPointerField(org.capnproto.PrimitiveList.Float.factory, 13, value);
      }
      public final org.capnproto.PrimitiveList.Float.Builder initFloat32List(int size) {
        return _initPointerField(org.capnproto.PrimitiveList.Float.factory, 13, size);
      }
      public final boolean hasFloat64List() {
        return !_pointerFieldIsNull(14);
      }
      public final org.capnproto.PrimitiveList.Double.Builder getFloat64List() {
        return _getPointerField(org.capnproto.PrimitiveList.Double.factory, 14, null, 0);
      }
      public final void setFloat64List(org.capnproto.PrimitiveList.Double.Reader value) {
        _setPointerField(org.capnproto.PrimitiveList.Double.factory, 14, value);
      }
      public final org.capnproto.PrimitiveList.Double.Builder initFloat64List(int size) {
        return _initPointerField(org.capnproto.PrimitiveList.Double.factory, 14, size);
      }
      public final boolean hasTextList() {
        return !_pointerFieldIsNull(15);
      }
      public final org.capnproto.TextList.Builder getTextList() {
        return _getPointerField(org.capnproto.TextList.factory, 15, null, 0);
      }
      public final void setTextList(org.capnproto.TextList.Reader value) {
        _setPointerField(org.capnproto.TextList.factory, 15, value);
      }
      public final org.capnproto.TextList.Builder initTextList(int size) {
        return _initPointerField(org.capnproto.TextList.factory, 15, size);
      }
      public final boolean hasDataList() {
        return !_pointerFieldIsNull(16);
      }
      public final org.capnproto.DataList.Builder getDataList() {
        return _getPointerField(org.capnproto.DataList.factory, 16, null, 0);
      }
      public final void setDataList(org.capnproto.DataList.Reader value) {
        _setPointerField(org.capnproto.DataList.factory, 16, value);
      }
      public final org.capnproto.DataList.Builder initDataList(int size) {
        return _initPointerField(org.capnproto.DataList.factory, 16, size);
      }
      public final boolean hasStructList() {
        return !_pointerFieldIsNull(17);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.rpctest.Test.TestAllTypes.Builder> getStructList() {
        return _getPointerField(org.capnproto.rpctest.Test.TestAllTypes.listFactory, 17, null, 0);
      }
      public final void setStructList(org.capnproto.StructList.Reader<org.capnproto.rpctest.Test.TestAllTypes.Reader> value) {
        _setPointerField(org.capnproto.rpctest.Test.TestAllTypes.listFactory, 17, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.rpctest.Test.TestAllTypes.Builder> initStructList(int size) {
        return _initPointerField(org.capnproto.rpctest.Test.TestAllTypes.listFactory, 17, size);
      }
      public final boolean hasEnumList() {
        return !_pointerFieldIsNull(18);
      }
      public final org.capnproto.EnumList.Builder<org.capnproto.rpctest.Test.TestEnum> getEnumList() {
        return _getPointerField(new org.capnproto.EnumList.Factory<org.capnproto.rpctest.Test.TestEnum>(org.capnproto.rpctest.Test.TestEnum.values()), 18, null, 0);
      }
      public final void setEnumList(org.capnproto.EnumList.Reader<org.capnproto.rpctest.Test.TestEnum> value) {
        _setPointerField(new org.capnproto.EnumList.Factory<org.capnproto.rpctest.Test.TestEnum>(org.capnproto.rpctest.Test.TestEnum.values()), 18, value);
      }
      public final org.capnproto.EnumList.Builder<org.capnproto.rpctest.Test.TestEnum> initEnumList(int size) {
        return _initPointerField(new org.capnproto.EnumList.Factory<org.capnproto.rpctest.Test.TestEnum>(org.capnproto.rpctest.Test.TestEnum.values()), 18, size);
      }
      public final boolean hasInterfaceList() {
        return !_pointerFieldIsNull(19);
      }
      public final org.capnproto.PrimitiveList.Void.Builder getInterfaceList() {
        return _getPointerField(org.capnproto.PrimitiveList.Void.factory, 19, null, 0);
      }
      public final void setInterfaceList(org.capnproto.PrimitiveList.Void.Reader value) {
        _setPointerField(org.capnproto.PrimitiveList.Void.factory, 19, value);
      }
      public final org.capnproto.PrimitiveList.Void.Builder initInterfaceList(int size) {
        return _initPointerField(org.capnproto.PrimitiveList.Void.factory, 19, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final org.capnproto.Void getVoidField() {
        return org.capnproto.Void.VOID;
      }

      public final boolean getBoolField() {
        return _getBooleanField(0);
      }

      public final byte getInt8Field() {
        return _getByteField(1);
      }

      public final short getInt16Field() {
        return _getShortField(1);
      }

      public final int getInt32Field() {
        return _getIntField(1);
      }

      public final long getInt64Field() {
        return _getLongField(1);
      }

      public final byte getUInt8Field() {
        return _getByteField(16);
      }

      public final short getUInt16Field() {
        return _getShortField(9);
      }

      public final int getUInt32Field() {
        return _getIntField(5);
      }

      public final long getUInt64Field() {
        return _getLongField(3);
      }

      public final float getFloat32Field() {
        return _getFloatField(8);
      }

      public final double getFloat64Field() {
        return _getDoubleField(5);
      }

      public boolean hasTextField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTextField() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public boolean hasDataField() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.Data.Reader getDataField() {
        return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
      }

      public boolean hasStructField() {
        return !_pointerFieldIsNull(2);
      }
      public org.capnproto.rpctest.Test.TestAllTypes.Reader getStructField() {
        return _getPointerField(org.capnproto.rpctest.Test.TestAllTypes.factory,2,null, 0);
      }

      public final org.capnproto.rpctest.Test.TestEnum getEnumField() {
        switch(_getShortField(18)) {
          case 0 : return org.capnproto.rpctest.Test.TestEnum.FOO;
          case 1 : return org.capnproto.rpctest.Test.TestEnum.BAR;
          case 2 : return org.capnproto.rpctest.Test.TestEnum.BAZ;
          case 3 : return org.capnproto.rpctest.Test.TestEnum.QUX;
          case 4 : return org.capnproto.rpctest.Test.TestEnum.QUUX;
          case 5 : return org.capnproto.rpctest.Test.TestEnum.CORGE;
          case 6 : return org.capnproto.rpctest.Test.TestEnum.GRAULT;
          case 7 : return org.capnproto.rpctest.Test.TestEnum.GARPLY;
          default: return org.capnproto.rpctest.Test.TestEnum._NOT_IN_SCHEMA;
        }
      }

      public final org.capnproto.Void getInterfaceField() {
        return org.capnproto.Void.VOID;
      }

      public final boolean hasVoidList() {
        return !_pointerFieldIsNull(3);
      }
      public final org.capnproto.PrimitiveList.Void.Reader getVoidList() {
        return _getPointerField(org.capnproto.PrimitiveList.Void.factory, 3, null, 0);
      }

      public final boolean hasBoolList() {
        return !_pointerFieldIsNull(4);
      }
      public final org.capnproto.PrimitiveList.Boolean.Reader getBoolList() {
        return _getPointerField(org.capnproto.PrimitiveList.Boolean.factory, 4, null, 0);
      }

      public final boolean hasInt8List() {
        return !_pointerFieldIsNull(5);
      }
      public final org.capnproto.PrimitiveList.Byte.Reader getInt8List() {
        return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 5, null, 0);
      }

      public final boolean hasInt16List() {
        return !_pointerFieldIsNull(6);
      }
      public final org.capnproto.PrimitiveList.Short.Reader getInt16List() {
        return _getPointerField(org.capnproto.PrimitiveList.Short.factory, 6, null, 0);
      }

      public final boolean hasInt32List() {
        return !_pointerFieldIsNull(7);
      }
      public final org.capnproto.PrimitiveList.Int.Reader getInt32List() {
        return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 7, null, 0);
      }

      public final boolean hasInt64List() {
        return !_pointerFieldIsNull(8);
      }
      public final org.capnproto.PrimitiveList.Long.Reader getInt64List() {
        return _getPointerField(org.capnproto.PrimitiveList.Long.factory, 8, null, 0);
      }

      public final boolean hasUInt8List() {
        return !_pointerFieldIsNull(9);
      }
      public final org.capnproto.PrimitiveList.Byte.Reader getUInt8List() {
        return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 9, null, 0);
      }

      public final boolean hasUInt16List() {
        return !_pointerFieldIsNull(10);
      }
      public final org.capnproto.PrimitiveList.Short.Reader getUInt16List() {
        return _getPointerField(org.capnproto.PrimitiveList.Short.factory, 10, null, 0);
      }

      public final boolean hasUInt32List() {
        return !_pointerFieldIsNull(11);
      }
      public final org.capnproto.PrimitiveList.Int.Reader getUInt32List() {
        return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 11, null, 0);
      }

      public final boolean hasUInt64List() {
        return !_pointerFieldIsNull(12);
      }
      public final org.capnproto.PrimitiveList.Long.Reader getUInt64List() {
        return _getPointerField(org.capnproto.PrimitiveList.Long.factory, 12, null, 0);
      }

      public final boolean hasFloat32List() {
        return !_pointerFieldIsNull(13);
      }
      public final org.capnproto.PrimitiveList.Float.Reader getFloat32List() {
        return _getPointerField(org.capnproto.PrimitiveList.Float.factory, 13, null, 0);
      }

      public final boolean hasFloat64List() {
        return !_pointerFieldIsNull(14);
      }
      public final org.capnproto.PrimitiveList.Double.Reader getFloat64List() {
        return _getPointerField(org.capnproto.PrimitiveList.Double.factory, 14, null, 0);
      }

      public final boolean hasTextList() {
        return !_pointerFieldIsNull(15);
      }
      public final org.capnproto.TextList.Reader getTextList() {
        return _getPointerField(org.capnproto.TextList.factory, 15, null, 0);
      }

      public final boolean hasDataList() {
        return !_pointerFieldIsNull(16);
      }
      public final org.capnproto.DataList.Reader getDataList() {
        return _getPointerField(org.capnproto.DataList.factory, 16, null, 0);
      }

      public final boolean hasStructList() {
        return !_pointerFieldIsNull(17);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.rpctest.Test.TestAllTypes.Reader> getStructList() {
        return _getPointerField(org.capnproto.rpctest.Test.TestAllTypes.listFactory, 17, null, 0);
      }

      public final boolean hasEnumList() {
        return !_pointerFieldIsNull(18);
      }
      public final org.capnproto.EnumList.Reader<org.capnproto.rpctest.Test.TestEnum> getEnumList() {
        return _getPointerField(new org.capnproto.EnumList.Factory<org.capnproto.rpctest.Test.TestEnum>(org.capnproto.rpctest.Test.TestEnum.values()), 18, null, 0);
      }

      public final boolean hasInterfaceList() {
        return !_pointerFieldIsNull(19);
      }
      public final org.capnproto.PrimitiveList.Void.Reader getInterfaceList() {
        return _getPointerField(org.capnproto.PrimitiveList.Void.factory, 19, null, 0);
      }

    }

    public interface Pipeline extends org.capnproto.Pipeline {
      default org.capnproto.rpctest.Test.TestAllTypes.Pipeline getStructField() {
        var pipeline = this.typelessPipeline().getPointerField((short)2);
        return () -> pipeline;
      }
    }
  }
  public static class TestAnyPointer {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestAnyPointer.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasAnyPointerField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Builder getAnyPointerField() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public org.capnproto.AnyPointer.Builder initAnyPointerField() {
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, 0);
      }
      public org.capnproto.AnyPointer.Builder initAnyPointerField(int size) {
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, size);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasAnyPointerField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Reader getAnyPointerField() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
    }

    public interface Pipeline extends org.capnproto.Pipeline {
    }
  }
  public static class TestAnyOthers {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)3);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestAnyOthers.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasAnyStructField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyStruct.Builder getAnyStructField() {
        return _getPointerField(org.capnproto.AnyStruct.factory, 0);
      }
      public org.capnproto.AnyStruct.Builder initAnyStructField() {
        return _initPointerField(org.capnproto.AnyStruct.factory, 0, 0);
      }
      public org.capnproto.AnyStruct.Builder initAnyStructField(int size) {
        return _initPointerField(org.capnproto.AnyStruct.factory, 0, size);
      }

      public final boolean hasAnyListField() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.AnyList.Builder getAnyListField() {
        return _getPointerField(org.capnproto.AnyList.factory, 1);
      }
      public org.capnproto.AnyList.Builder initAnyListField() {
        return _initPointerField(org.capnproto.AnyList.factory, 1, 0);
      }
      public org.capnproto.AnyList.Builder initAnyListField(int size) {
        return _initPointerField(org.capnproto.AnyList.factory, 1, size);
      }

      public final boolean hasCapabilityField() {
        return !_pointerFieldIsNull(2);
      }
      public org.capnproto.Capability.Client getCapabilityField() {
        return _getPointerField(org.capnproto.Capability.factory, 2);
      }
      public void setCapabilityField(org.capnproto.Capability.Client value) {
        _setPointerField(org.capnproto.Capability.factory, 2, value);
      }
      public void setCapabilityField(org.capnproto.Capability.Server value) {
        this.setCapabilityField(new org.capnproto.Capability.Client(value));
      }
      public void setCapabilityField(java.util.concurrent.CompletableFuture<? extends org.capnproto.Capability.Client> value) {
        this.setCapabilityField(new org.capnproto.Capability.Client(value));
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasAnyStructField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyStruct.Reader getAnyStructField() {
        return _getPointerField(org.capnproto.AnyStruct.factory, 0);
      }
      public boolean hasAnyListField() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.AnyList.Reader getAnyListField() {
        return _getPointerField(org.capnproto.AnyList.factory, 1);
      }
      public boolean hasCapabilityField() {
        return !_pointerFieldIsNull(2);
      }
      public org.capnproto.Capability.Client getCapabilityField() {
        return _getPointerField(org.capnproto.Capability.factory, 2);
      }
    }

    public interface Pipeline extends org.capnproto.Pipeline {
      default org.capnproto.Capability.Client getCapabilityField() {
        return new org.capnproto.Capability.Client(
          this.typelessPipeline().getPointerField((short)2).asCap()
        );
      }
    }
  }
  public static class TestOutOfOrder {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)9);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestOutOfOrder.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasQux() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getQux() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setQux(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setQux(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initQux(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean hasGrault() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.Text.Builder getGrault() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }
      public final void setGrault(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 1, value);
      }
      public final void setGrault(String value) {
        _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initGrault(int size) {
        return _initPointerField(org.capnproto.Text.factory, 1, size);
      }
      public final boolean hasBar() {
        return !_pointerFieldIsNull(2);
      }
      public final org.capnproto.Text.Builder getBar() {
        return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
      }
      public final void setBar(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 2, value);
      }
      public final void setBar(String value) {
        _setPointerField(org.capnproto.Text.factory, 2, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initBar(int size) {
        return _initPointerField(org.capnproto.Text.factory, 2, size);
      }
      public final boolean hasFoo() {
        return !_pointerFieldIsNull(3);
      }
      public final org.capnproto.Text.Builder getFoo() {
        return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
      }
      public final void setFoo(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 3, value);
      }
      public final void setFoo(String value) {
        _setPointerField(org.capnproto.Text.factory, 3, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initFoo(int size) {
        return _initPointerField(org.capnproto.Text.factory, 3, size);
      }
      public final boolean hasCorge() {
        return !_pointerFieldIsNull(4);
      }
      public final org.capnproto.Text.Builder getCorge() {
        return _getPointerField(org.capnproto.Text.factory, 4, null, 0, 0);
      }
      public final void setCorge(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 4, value);
      }
      public final void setCorge(String value) {
        _setPointerField(org.capnproto.Text.factory, 4, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initCorge(int size) {
        return _initPointerField(org.capnproto.Text.factory, 4, size);
      }
      public final boolean hasWaldo() {
        return !_pointerFieldIsNull(5);
      }
      public final org.capnproto.Text.Builder getWaldo() {
        return _getPointerField(org.capnproto.Text.factory, 5, null, 0, 0);
      }
      public final void setWaldo(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 5, value);
      }
      public final void setWaldo(String value) {
        _setPointerField(org.capnproto.Text.factory, 5, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initWaldo(int size) {
        return _initPointerField(org.capnproto.Text.factory, 5, size);
      }
      public final boolean hasQuux() {
        return !_pointerFieldIsNull(6);
      }
      public final org.capnproto.Text.Builder getQuux() {
        return _getPointerField(org.capnproto.Text.factory, 6, null, 0, 0);
      }
      public final void setQuux(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 6, value);
      }
      public final void setQuux(String value) {
        _setPointerField(org.capnproto.Text.factory, 6, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initQuux(int size) {
        return _initPointerField(org.capnproto.Text.factory, 6, size);
      }
      public final boolean hasGarply() {
        return !_pointerFieldIsNull(7);
      }
      public final org.capnproto.Text.Builder getGarply() {
        return _getPointerField(org.capnproto.Text.factory, 7, null, 0, 0);
      }
      public final void setGarply(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 7, value);
      }
      public final void setGarply(String value) {
        _setPointerField(org.capnproto.Text.factory, 7, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initGarply(int size) {
        return _initPointerField(org.capnproto.Text.factory, 7, size);
      }
      public final boolean hasBaz() {
        return !_pointerFieldIsNull(8);
      }
      public final org.capnproto.Text.Builder getBaz() {
        return _getPointerField(org.capnproto.Text.factory, 8, null, 0, 0);
      }
      public final void setBaz(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 8, value);
      }
      public final void setBaz(String value) {
        _setPointerField(org.capnproto.Text.factory, 8, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initBaz(int size) {
        return _initPointerField(org.capnproto.Text.factory, 8, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasQux() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getQux() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public boolean hasGrault() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.Text.Reader getGrault() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }

      public boolean hasBar() {
        return !_pointerFieldIsNull(2);
      }
      public org.capnproto.Text.Reader getBar() {
        return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
      }

      public boolean hasFoo() {
        return !_pointerFieldIsNull(3);
      }
      public org.capnproto.Text.Reader getFoo() {
        return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
      }

      public boolean hasCorge() {
        return !_pointerFieldIsNull(4);
      }
      public org.capnproto.Text.Reader getCorge() {
        return _getPointerField(org.capnproto.Text.factory, 4, null, 0, 0);
      }

      public boolean hasWaldo() {
        return !_pointerFieldIsNull(5);
      }
      public org.capnproto.Text.Reader getWaldo() {
        return _getPointerField(org.capnproto.Text.factory, 5, null, 0, 0);
      }

      public boolean hasQuux() {
        return !_pointerFieldIsNull(6);
      }
      public org.capnproto.Text.Reader getQuux() {
        return _getPointerField(org.capnproto.Text.factory, 6, null, 0, 0);
      }

      public boolean hasGarply() {
        return !_pointerFieldIsNull(7);
      }
      public org.capnproto.Text.Reader getGarply() {
        return _getPointerField(org.capnproto.Text.factory, 7, null, 0, 0);
      }

      public boolean hasBaz() {
        return !_pointerFieldIsNull(8);
      }
      public org.capnproto.Text.Reader getBaz() {
        return _getPointerField(org.capnproto.Text.factory, 8, null, 0, 0);
      }

    }

    public interface Pipeline extends org.capnproto.Pipeline {
    }
  }
  public static class TestUnnamedUnion {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestUnnamedUnion.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(2)) {
          case 0 : return Which.FOO;
          case 1 : return Which.BAR;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasBefore() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getBefore() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setBefore(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setBefore(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initBefore(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean isFoo() {
        return which() == TestUnnamedUnion.Which.FOO;
      }
      public final short getFoo() {
        assert which() == TestUnnamedUnion.Which.FOO:
                    "Must check which() before get()ing a union member.";
        return _getShortField(0);
      }
      public final void setFoo(short value) {
        _setShortField(2, (short)TestUnnamedUnion.Which.FOO.ordinal());
        _setShortField(0, value);
      }

      public final short getMiddle() {
        return _getShortField(1);
      }
      public final void setMiddle(short value) {
        _setShortField(1, value);
      }

      public final boolean isBar() {
        return which() == TestUnnamedUnion.Which.BAR;
      }
      public final int getBar() {
        assert which() == TestUnnamedUnion.Which.BAR:
                    "Must check which() before get()ing a union member.";
        return _getIntField(2);
      }
      public final void setBar(int value) {
        _setShortField(2, (short)TestUnnamedUnion.Which.BAR.ordinal());
        _setIntField(2, value);
      }

      public final boolean hasAfter() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.Text.Builder getAfter() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }
      public final void setAfter(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 1, value);
      }
      public final void setAfter(String value) {
        _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initAfter(int size) {
        return _initPointerField(org.capnproto.Text.factory, 1, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(2)) {
          case 0 : return Which.FOO;
          case 1 : return Which.BAR;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public boolean hasBefore() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getBefore() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final boolean isFoo() {
        return which() == TestUnnamedUnion.Which.FOO;
      }
      public final short getFoo() {
        assert which() == TestUnnamedUnion.Which.FOO:
                    "Must check which() before get()ing a union member.";
        return _getShortField(0);
      }

      public final short getMiddle() {
        return _getShortField(1);
      }

      public final boolean isBar() {
        return which() == TestUnnamedUnion.Which.BAR;
      }
      public final int getBar() {
        assert which() == TestUnnamedUnion.Which.BAR:
                    "Must check which() before get()ing a union member.";
        return _getIntField(2);
      }

      public boolean hasAfter() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.Text.Reader getAfter() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }

    }

    public enum Which {
      FOO,
      BAR,
      _NOT_IN_SCHEMA,
    }
    public interface Pipeline extends org.capnproto.Pipeline {
    }
  }
  public static class TestUnionInUnion {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestUnionInUnion.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final Outer.Builder getOuter() {
        return new TestUnionInUnion.Outer.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Outer.Builder initOuter() {
        _setIntField(0,0);
        _setShortField(2,(short)0);
        _setShortField(4,(short)0);
  return new TestUnionInUnion.Outer.Builder(segment, data, pointers, dataSize, pointerCount);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Outer.Reader getOuter() {
        return new TestUnionInUnion.Outer.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

    }

    public static class Outer {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestUnionInUnion.Outer.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(4)) {
            case 0 : return Which.INNER;
            case 1 : return Which.BAZ;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean isInner() {
          return which() == TestUnionInUnion.Outer.Which.INNER;
        }
        public final Inner.Builder getInner() {
          return new TestUnionInUnion.Outer.Inner.Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final Inner.Builder initInner() {
          _setShortField(4, (short)TestUnionInUnion.Outer.Which.INNER.ordinal());
          _setIntField(0,0);
          _setShortField(2,(short)0);
  return new TestUnionInUnion.Outer.Inner.Builder(segment, data, pointers, dataSize, pointerCount);
        }

        public final boolean isBaz() {
          return which() == TestUnionInUnion.Outer.Which.BAZ;
        }
        public final int getBaz() {
          assert which() == TestUnionInUnion.Outer.Which.BAZ:
                      "Must check which() before get()ing a union member.";
          return _getIntField(0);
        }
        public final void setBaz(int value) {
          _setShortField(4, (short)TestUnionInUnion.Outer.Which.BAZ.ordinal());
          _setIntField(0, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(4)) {
            case 0 : return Which.INNER;
            case 1 : return Which.BAZ;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final boolean isInner() {
          return which() == TestUnionInUnion.Outer.Which.INNER;
        }
        public Inner.Reader getInner() {
          return new TestUnionInUnion.Outer.Inner.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean isBaz() {
          return which() == TestUnionInUnion.Outer.Which.BAZ;
        }
        public final int getBaz() {
          assert which() == TestUnionInUnion.Outer.Which.BAZ:
                      "Must check which() before get()ing a union member.";
          return _getIntField(0);
        }

      }

      public enum Which {
        INNER,
        BAZ,
        _NOT_IN_SCHEMA,
      }
      public static class Inner {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return TestUnionInUnion.Outer.Inner.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public Which which() {
            switch(_getShortField(2)) {
              case 0 : return Which.FOO;
              case 1 : return Which.BAR;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean isFoo() {
            return which() == TestUnionInUnion.Outer.Inner.Which.FOO;
          }
          public final int getFoo() {
            assert which() == TestUnionInUnion.Outer.Inner.Which.FOO:
                        "Must check which() before get()ing a union member.";
            return _getIntField(0);
          }
          public final void setFoo(int value) {
            _setShortField(2, (short)TestUnionInUnion.Outer.Inner.Which.FOO.ordinal());
            _setIntField(0, value);
          }

          public final boolean isBar() {
            return which() == TestUnionInUnion.Outer.Inner.Which.BAR;
          }
          public final int getBar() {
            assert which() == TestUnionInUnion.Outer.Inner.Which.BAR:
                        "Must check which() before get()ing a union member.";
            return _getIntField(0);
          }
          public final void setBar(int value) {
            _setShortField(2, (short)TestUnionInUnion.Outer.Inner.Which.BAR.ordinal());
            _setIntField(0, value);
          }

        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Which which() {
            switch(_getShortField(2)) {
              case 0 : return Which.FOO;
              case 1 : return Which.BAR;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final boolean isFoo() {
            return which() == TestUnionInUnion.Outer.Inner.Which.FOO;
          }
          public final int getFoo() {
            assert which() == TestUnionInUnion.Outer.Inner.Which.FOO:
                        "Must check which() before get()ing a union member.";
            return _getIntField(0);
          }

          public final boolean isBar() {
            return which() == TestUnionInUnion.Outer.Inner.Which.BAR;
          }
          public final int getBar() {
            assert which() == TestUnionInUnion.Outer.Inner.Which.BAR:
                        "Must check which() before get()ing a union member.";
            return _getIntField(0);
          }

        }

        public enum Which {
          FOO,
          BAR,
          _NOT_IN_SCHEMA,
        }
        public interface Pipeline extends org.capnproto.Pipeline {
        }
      }
      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public interface Pipeline extends org.capnproto.Pipeline {
      default Outer.Pipeline getOuter() {
        var pipeline = this.typelessPipeline().noop();
        return () -> pipeline;
      }
    }
  }
  public static class TestGroups {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestGroups.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final Groups.Builder getGroups() {
        return new TestGroups.Groups.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Groups.Builder initGroups() {
        _setIntField(0,0);
        _setShortField(2,(short)0);
        _setLongField(1,0L);
        _clearPointerField(0);
        _clearPointerField(1);
  return new TestGroups.Groups.Builder(segment, data, pointers, dataSize, pointerCount);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Groups.Reader getGroups() {
        return new TestGroups.Groups.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

    }

    public static class Groups {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestGroups.Groups.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(2)) {
            case 0 : return Which.FOO;
            case 1 : return Which.BAZ;
            case 2 : return Which.BAR;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean isFoo() {
          return which() == TestGroups.Groups.Which.FOO;
        }
        public final Foo.Builder getFoo() {
          return new TestGroups.Groups.Foo.Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final Foo.Builder initFoo() {
          _setShortField(2, (short)TestGroups.Groups.Which.FOO.ordinal());
          _setIntField(0,0);
          _setLongField(1,0L);
          _clearPointerField(0);
  return new TestGroups.Groups.Foo.Builder(segment, data, pointers, dataSize, pointerCount);
        }

        public final boolean isBaz() {
          return which() == TestGroups.Groups.Which.BAZ;
        }
        public final Baz.Builder getBaz() {
          return new TestGroups.Groups.Baz.Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final Baz.Builder initBaz() {
          _setShortField(2, (short)TestGroups.Groups.Which.BAZ.ordinal());
          _setIntField(0,0);
          _clearPointerField(0);
          _clearPointerField(1);
  return new TestGroups.Groups.Baz.Builder(segment, data, pointers, dataSize, pointerCount);
        }

        public final boolean isBar() {
          return which() == TestGroups.Groups.Which.BAR;
        }
        public final Bar.Builder getBar() {
          return new TestGroups.Groups.Bar.Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final Bar.Builder initBar() {
          _setShortField(2, (short)TestGroups.Groups.Which.BAR.ordinal());
          _setIntField(0,0);
          _setLongField(1,0L);
          _clearPointerField(0);
  return new TestGroups.Groups.Bar.Builder(segment, data, pointers, dataSize, pointerCount);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(2)) {
            case 0 : return Which.FOO;
            case 1 : return Which.BAZ;
            case 2 : return Which.BAR;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final boolean isFoo() {
          return which() == TestGroups.Groups.Which.FOO;
        }
        public Foo.Reader getFoo() {
          return new TestGroups.Groups.Foo.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean isBaz() {
          return which() == TestGroups.Groups.Which.BAZ;
        }
        public Baz.Reader getBaz() {
          return new TestGroups.Groups.Baz.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean isBar() {
          return which() == TestGroups.Groups.Which.BAR;
        }
        public Bar.Reader getBar() {
          return new TestGroups.Groups.Bar.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public enum Which {
        FOO,
        BAZ,
        BAR,
        _NOT_IN_SCHEMA,
      }
      public static class Foo {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return TestGroups.Groups.Foo.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final int getCorge() {
            return _getIntField(0);
          }
          public final void setCorge(int value) {
            _setIntField(0, value);
          }

          public final long getGrault() {
            return _getLongField(1);
          }
          public final void setGrault(long value) {
            _setLongField(1, value);
          }

          public final boolean hasGarply() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getGarply() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setGarply(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setGarply(String value) {
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initGarply(int size) {
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public final int getCorge() {
            return _getIntField(0);
          }

          public final long getGrault() {
            return _getLongField(1);
          }

          public boolean hasGarply() {
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getGarply() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

        }

        public interface Pipeline extends org.capnproto.Pipeline {
        }
      }
      public static class Baz {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return TestGroups.Groups.Baz.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final int getCorge() {
            return _getIntField(0);
          }
          public final void setCorge(int value) {
            _setIntField(0, value);
          }

          public final boolean hasGrault() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getGrault() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setGrault(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setGrault(String value) {
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initGrault(int size) {
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final boolean hasGarply() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.Text.Builder getGarply() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }
          public final void setGarply(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 1, value);
          }
          public final void setGarply(String value) {
            _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initGarply(int size) {
            return _initPointerField(org.capnproto.Text.factory, 1, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public final int getCorge() {
            return _getIntField(0);
          }

          public boolean hasGrault() {
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getGrault() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public boolean hasGarply() {
            return !_pointerFieldIsNull(1);
          }
          public org.capnproto.Text.Reader getGarply() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }

        }

        public interface Pipeline extends org.capnproto.Pipeline {
        }
      }
      public static class Bar {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return TestGroups.Groups.Bar.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final int getCorge() {
            return _getIntField(0);
          }
          public final void setCorge(int value) {
            _setIntField(0, value);
          }

          public final boolean hasGrault() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getGrault() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setGrault(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setGrault(String value) {
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initGrault(int size) {
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final long getGarply() {
            return _getLongField(1);
          }
          public final void setGarply(long value) {
            _setLongField(1, value);
          }

        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public final int getCorge() {
            return _getIntField(0);
          }

          public boolean hasGrault() {
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getGrault() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public final long getGarply() {
            return _getLongField(1);
          }

        }

        public interface Pipeline extends org.capnproto.Pipeline {
        }
      }
      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public interface Pipeline extends org.capnproto.Pipeline {
      default Groups.Pipeline getGroups() {
        var pipeline = this.typelessPipeline().noop();
        return () -> pipeline;
      }
    }
  }
  public static class TestSturdyRef {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestSturdyRef.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final org.capnproto.rpctest.Test.TestSturdyRefHostId.Builder getHostId() {
        return _getPointerField(org.capnproto.rpctest.Test.TestSturdyRefHostId.factory, 0, null, 0);
      }
      public final void setHostId(org.capnproto.rpctest.Test.TestSturdyRefHostId.Reader value) {
        _setPointerField(org.capnproto.rpctest.Test.TestSturdyRefHostId.factory,0, value);
      }
      public final org.capnproto.rpctest.Test.TestSturdyRefHostId.Builder initHostId() {
        return _initPointerField(org.capnproto.rpctest.Test.TestSturdyRefHostId.factory,0, 0);
      }
      public final boolean hasObjectId() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.AnyPointer.Builder getObjectId() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 1);
      }
      public org.capnproto.AnyPointer.Builder initObjectId() {
        return _initPointerField(org.capnproto.AnyPointer.factory, 1, 0);
      }
      public org.capnproto.AnyPointer.Builder initObjectId(int size) {
        return _initPointerField(org.capnproto.AnyPointer.factory, 1, size);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasHostId() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.rpctest.Test.TestSturdyRefHostId.Reader getHostId() {
        return _getPointerField(org.capnproto.rpctest.Test.TestSturdyRefHostId.factory,0,null, 0);
      }

      public boolean hasObjectId() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.AnyPointer.Reader getObjectId() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 1);
      }
    }

    public interface Pipeline extends org.capnproto.Pipeline {
      default org.capnproto.rpctest.Test.TestSturdyRefHostId.Pipeline getHostId() {
        var pipeline = this.typelessPipeline().getPointerField((short)0);
        return () -> pipeline;
      }
    }
  }
  public static class TestSturdyRefHostId {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestSturdyRefHostId.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasHost() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getHost() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setHost(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setHost(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initHost(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasHost() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getHost() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

    }

    public interface Pipeline extends org.capnproto.Pipeline {
    }
  }
  public static class TestSturdyRefObjectId {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestSturdyRefObjectId.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag getTag() {
        switch(_getShortField(0)) {
          case 0 : return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag.TEST_INTERFACE;
          case 1 : return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag.TEST_EXTENDS;
          case 2 : return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag.TEST_PIPELINE;
          case 3 : return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag.TEST_TAIL_CALLEE;
          case 4 : return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag.TEST_TAIL_CALLER;
          case 5 : return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag.TEST_MORE_STUFF;
          default: return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag._NOT_IN_SCHEMA;
        }
      }
      public final void setTag(org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag value) {
        _setShortField(0, (short)value.ordinal());
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag getTag() {
        switch(_getShortField(0)) {
          case 0 : return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag.TEST_INTERFACE;
          case 1 : return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag.TEST_EXTENDS;
          case 2 : return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag.TEST_PIPELINE;
          case 3 : return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag.TEST_TAIL_CALLEE;
          case 4 : return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag.TEST_TAIL_CALLER;
          case 5 : return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag.TEST_MORE_STUFF;
          default: return org.capnproto.rpctest.Test.TestSturdyRefObjectId.Tag._NOT_IN_SCHEMA;
        }
      }

    }

    public enum Tag {
      TEST_INTERFACE,
      TEST_EXTENDS,
      TEST_PIPELINE,
      TEST_TAIL_CALLEE,
      TEST_TAIL_CALLER,
      TEST_MORE_STUFF,
      _NOT_IN_SCHEMA,
    }

    public interface Pipeline extends org.capnproto.Pipeline {
    }
  }
  public static class TestProvisionId {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestProvisionId.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

    }

    public interface Pipeline extends org.capnproto.Pipeline {
    }
  }
  public static class TestRecipientId {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestRecipientId.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

    }

    public interface Pipeline extends org.capnproto.Pipeline {
    }
  }
  public static class TestThirdPartyCapId {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestThirdPartyCapId.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

    }

    public interface Pipeline extends org.capnproto.Pipeline {
    }
  }
  public static class TestJoinResult {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestJoinResult.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

    }

    public interface Pipeline extends org.capnproto.Pipeline {
    }
  }
  public static class TestInterface {
    public static final class Factory
        extends org.capnproto.Capability.Factory<Client> {
      public Factory() {
      }
      public final Client newClient(org.capnproto.ClientHook hook) {
        return new Client(hook);
      }
    }

    public static final Factory factory = new Factory();

    public static class Client
        extends org.capnproto.Capability.Client {
      public Client() {}
      public Client(org.capnproto.ClientHook hook) { super(hook); }
      public Client(org.capnproto.Capability.Client cap) { super(cap); }
      public Client(Server server) { super(server); }
      public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
        super(promise);
      }
      public static final class Methods {
        public static final class foo {
          public interface Request extends org.capnproto.Request<FooParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<FooResults.Reader>
              implements FooResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(FooResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class bar {
          public interface Request extends org.capnproto.Request<BarParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<BarResults.Reader>
              implements BarResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(BarResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class baz {
          public interface Request extends org.capnproto.Request<BazParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<BazResults.Reader>
              implements BazResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(BazResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
      }
      public Methods.foo.Request fooRequest() {
        var result = newCall(FooParams.factory, 0xeabb7f3581f9ca3fL, (short)0);
        return () -> result;
      }
      public Methods.bar.Request barRequest() {
        var result = newCall(BarParams.factory, 0xeabb7f3581f9ca3fL, (short)1);
        return () -> result;
      }
      public Methods.baz.Request bazRequest() {
        var result = newCall(BazParams.factory, 0xeabb7f3581f9ca3fL, (short)2);
        return () -> result;
      }
    }
    public static abstract class Server
        extends org.capnproto.Capability.Server {
      protected org.capnproto.DispatchCallResult dispatchCall(
          long interfaceId, short methodId,
          org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        if (interfaceId == 0xeabb7f3581f9ca3fL) {
            return this.dispatchCallInternal(methodId, context);
        }
        else {
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestInterface", interfaceId));
        }
      }
      private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        switch (methodId) {
      case 0:
        return org.capnproto.Capability.Server.result(
          this.foo(org.capnproto.Capability.Server.internalGetTypedContext(
            FooParams.factory, FooResults.factory, context)));
      case 1:
        return org.capnproto.Capability.Server.result(
          this.bar(org.capnproto.Capability.Server.internalGetTypedContext(
            BarParams.factory, BarResults.factory, context)));
      case 2:
        return org.capnproto.Capability.Server.result(
          this.baz(org.capnproto.Capability.Server.internalGetTypedContext(
            BazParams.factory, BazResults.factory, context)));
        default:
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestInterface", 0xeabb7f3581f9ca3fL, methodId));
        }
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> foo(org.capnproto.CallContext<FooParams.Reader, FooResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestInterface", "foo", 0xeabb7f3581f9ca3fL, (short)0);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> bar(org.capnproto.CallContext<BarParams.Reader, BarResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestInterface", "bar", 0xeabb7f3581f9ca3fL, (short)1);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> baz(org.capnproto.CallContext<BazParams.Reader, BazResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestInterface", "baz", 0xeabb7f3581f9ca3fL, (short)2);
      }
      protected Client thisCap() { return new Client(super.thisCap()); }
    }
    public static class FooParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestInterface.FooParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getI() {
          return _getIntField(0);
        }
        public final void setI(int value) {
          _setIntField(0, value);
        }

        public final boolean getJ() {
          return _getBooleanField(32);
        }
        public final void setJ(boolean value) {
          _setBooleanField(32, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getI() {
          return _getIntField(0);
        }

        public final boolean getJ() {
          return _getBooleanField(32);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class FooResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestInterface.FooResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasX() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getX() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setX(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setX(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initX(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasX() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getX() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class BarParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestInterface.BarParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class BarResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestInterface.BarResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class BazParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestInterface.BazParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final org.capnproto.rpctest.Test.TestAllTypes.Builder getS() {
          return _getPointerField(org.capnproto.rpctest.Test.TestAllTypes.factory, 0, null, 0);
        }
        public final void setS(org.capnproto.rpctest.Test.TestAllTypes.Reader value) {
          _setPointerField(org.capnproto.rpctest.Test.TestAllTypes.factory,0, value);
        }
        public final org.capnproto.rpctest.Test.TestAllTypes.Builder initS() {
          return _initPointerField(org.capnproto.rpctest.Test.TestAllTypes.factory,0, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasS() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestAllTypes.Reader getS() {
          return _getPointerField(org.capnproto.rpctest.Test.TestAllTypes.factory,0,null, 0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestAllTypes.Pipeline getS() {
          var pipeline = this.typelessPipeline().getPointerField((short)0);
          return () -> pipeline;
        }
      }
    }
    public static class BazResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestInterface.BazResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
  }

  public static class TestExtends {
    public static final class Factory
        extends org.capnproto.Capability.Factory<Client> {
      public Factory() {
      }
      public final Client newClient(org.capnproto.ClientHook hook) {
        return new Client(hook);
      }
    }

    public static final Factory factory = new Factory();

    public static class Client
        extends org.capnproto.rpctest.Test.TestInterface.Client {
      public Client() {}
      public Client(org.capnproto.ClientHook hook) { super(hook); }
      public Client(org.capnproto.Capability.Client cap) { super(cap); }
      public Client(Server server) { super(server); }
      public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
        super(promise);
      }
      public static final class Methods {
        public static final class qux {
          public interface Request extends org.capnproto.Request<QuxParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<QuxResults.Reader>
              implements QuxResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(QuxResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class corge {
          public interface Request extends org.capnproto.Request<org.capnproto.rpctest.Test.TestAllTypes.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<CorgeResults.Reader>
              implements CorgeResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(CorgeResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class grault {
          public interface Request extends org.capnproto.Request<GraultParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<org.capnproto.rpctest.Test.TestAllTypes.Reader>
              implements org.capnproto.rpctest.Test.TestAllTypes.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(org.capnproto.rpctest.Test.TestAllTypes.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
      }
      public Methods.qux.Request quxRequest() {
        var result = newCall(QuxParams.factory, 0x83b7a84e11b83fbdL, (short)0);
        return () -> result;
      }
      public Methods.corge.Request corgeRequest() {
        var result = newCall(org.capnproto.rpctest.Test.TestAllTypes.factory, 0x83b7a84e11b83fbdL, (short)1);
        return () -> result;
      }
      public Methods.grault.Request graultRequest() {
        var result = newCall(GraultParams.factory, 0x83b7a84e11b83fbdL, (short)2);
        return () -> result;
      }
    }
    public static abstract class Server
        extends org.capnproto.rpctest.Test.TestInterface.Server {
      protected org.capnproto.DispatchCallResult dispatchCall(
          long interfaceId, short methodId,
          org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        if (interfaceId == 0x83b7a84e11b83fbdL) {
            return this.dispatchCallInternal(methodId, context);
        }
        else if (interfaceId == 0xeabb7f3581f9ca3fL) {
            return super.dispatchCall(interfaceId, methodId, context);
        }
        else {
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestExtends", interfaceId));
        }
      }
      private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        switch (methodId) {
      case 0:
        return org.capnproto.Capability.Server.result(
          this.qux(org.capnproto.Capability.Server.internalGetTypedContext(
            QuxParams.factory, QuxResults.factory, context)));
      case 1:
        return org.capnproto.Capability.Server.result(
          this.corge(org.capnproto.Capability.Server.internalGetTypedContext(
            org.capnproto.rpctest.Test.TestAllTypes.factory, CorgeResults.factory, context)));
      case 2:
        return org.capnproto.Capability.Server.result(
          this.grault(org.capnproto.Capability.Server.internalGetTypedContext(
            GraultParams.factory, org.capnproto.rpctest.Test.TestAllTypes.factory, context)));
        default:
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestExtends", 0x83b7a84e11b83fbdL, methodId));
        }
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> qux(org.capnproto.CallContext<QuxParams.Reader, QuxResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestExtends", "qux", 0x83b7a84e11b83fbdL, (short)0);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> corge(org.capnproto.CallContext<org.capnproto.rpctest.Test.TestAllTypes.Reader, CorgeResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestExtends", "corge", 0x83b7a84e11b83fbdL, (short)1);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> grault(org.capnproto.CallContext<GraultParams.Reader, org.capnproto.rpctest.Test.TestAllTypes.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestExtends", "grault", 0x83b7a84e11b83fbdL, (short)2);
      }
      protected Client thisCap() { return new Client(super.thisCap()); }
    }
    public static class QuxParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestExtends.QuxParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class QuxResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestExtends.QuxResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class CorgeResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestExtends.CorgeResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class GraultParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestExtends.GraultParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
  }

  public static class TestExtends2 {
    public static final class Factory
        extends org.capnproto.Capability.Factory<Client> {
      public Factory() {
      }
      public final Client newClient(org.capnproto.ClientHook hook) {
        return new Client(hook);
      }
    }

    public static final Factory factory = new Factory();

    public static class Client
        extends org.capnproto.rpctest.Test.TestExtends.Client {
      public Client() {}
      public Client(org.capnproto.ClientHook hook) { super(hook); }
      public Client(org.capnproto.Capability.Client cap) { super(cap); }
      public Client(Server server) { super(server); }
      public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
        super(promise);
      }
      public static final class Methods {
      }
    }
    public static abstract class Server
        extends org.capnproto.rpctest.Test.TestExtends.Server {
      protected org.capnproto.DispatchCallResult dispatchCall(
          long interfaceId, short methodId,
          org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        if (interfaceId == 0xc0fe8dafeba21cc7L) {
            return this.dispatchCallInternal(methodId, context);
        }
        else if (interfaceId == 0x83b7a84e11b83fbdL) {
            return super.dispatchCall(interfaceId, methodId, context);
        }
        else if (interfaceId == 0xeabb7f3581f9ca3fL) {
            return super.dispatchCall(interfaceId, methodId, context);
        }
        else {
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestExtends2", interfaceId));
        }
      }
      private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        switch (methodId) {
        default:
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestExtends2", 0xc0fe8dafeba21cc7L, methodId));
        }
      }
      protected Client thisCap() { return new Client(super.thisCap()); }
    }
  }

  public static class TestPipeline {
    public static final class Factory
        extends org.capnproto.Capability.Factory<Client> {
      public Factory() {
      }
      public final Client newClient(org.capnproto.ClientHook hook) {
        return new Client(hook);
      }
    }

    public static final Factory factory = new Factory();

    public static class Client
        extends org.capnproto.Capability.Client {
      public Client() {}
      public Client(org.capnproto.ClientHook hook) { super(hook); }
      public Client(org.capnproto.Capability.Client cap) { super(cap); }
      public Client(Server server) { super(server); }
      public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
        super(promise);
      }
      public static final class Methods {
        public static final class getCap {
          public interface Request extends org.capnproto.Request<GetCapParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<GetCapResults.Reader>
              implements GetCapResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(GetCapResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class testPointers {
          public interface Request extends org.capnproto.Request<TestPointersParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<TestPointersResults.Reader>
              implements TestPointersResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(TestPointersResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class getAnyCap {
          public interface Request extends org.capnproto.Request<GetAnyCapParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<GetAnyCapResults.Reader>
              implements GetAnyCapResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(GetAnyCapResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
      }
      public Methods.getCap.Request getCapRequest() {
        var result = newCall(GetCapParams.factory, 0x87a04ceaa2fec4f5L, (short)0);
        return () -> result;
      }
      public Methods.testPointers.Request testPointersRequest() {
        var result = newCall(TestPointersParams.factory, 0x87a04ceaa2fec4f5L, (short)1);
        return () -> result;
      }
      public Methods.getAnyCap.Request getAnyCapRequest() {
        var result = newCall(GetAnyCapParams.factory, 0x87a04ceaa2fec4f5L, (short)2);
        return () -> result;
      }
    }
    public static abstract class Server
        extends org.capnproto.Capability.Server {
      protected org.capnproto.DispatchCallResult dispatchCall(
          long interfaceId, short methodId,
          org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        if (interfaceId == 0x87a04ceaa2fec4f5L) {
            return this.dispatchCallInternal(methodId, context);
        }
        else {
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestPipeline", interfaceId));
        }
      }
      private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        switch (methodId) {
      case 0:
        return org.capnproto.Capability.Server.result(
          this.getCap(org.capnproto.Capability.Server.internalGetTypedContext(
            GetCapParams.factory, GetCapResults.factory, context)));
      case 1:
        return org.capnproto.Capability.Server.result(
          this.testPointers(org.capnproto.Capability.Server.internalGetTypedContext(
            TestPointersParams.factory, TestPointersResults.factory, context)));
      case 2:
        return org.capnproto.Capability.Server.result(
          this.getAnyCap(org.capnproto.Capability.Server.internalGetTypedContext(
            GetAnyCapParams.factory, GetAnyCapResults.factory, context)));
        default:
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestPipeline", 0x87a04ceaa2fec4f5L, methodId));
        }
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> getCap(org.capnproto.CallContext<GetCapParams.Reader, GetCapResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestPipeline", "getCap", 0x87a04ceaa2fec4f5L, (short)0);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> testPointers(org.capnproto.CallContext<TestPointersParams.Reader, TestPointersResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestPipeline", "testPointers", 0x87a04ceaa2fec4f5L, (short)1);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> getAnyCap(org.capnproto.CallContext<GetAnyCapParams.Reader, GetAnyCapResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestPipeline", "getAnyCap", 0x87a04ceaa2fec4f5L, (short)2);
      }
      protected Client thisCap() { return new Client(super.thisCap()); }
    }
    public static class Box {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestPipeline.Box.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0, value);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class AnyBox {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestPipeline.AnyBox.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Capability.Client getCap() {
          return _getPointerField(org.capnproto.Capability.factory, 0);
        }
        public void setCap(org.capnproto.Capability.Client value) {
          _setPointerField(org.capnproto.Capability.factory, 0, value);
        }
        public void setCap(org.capnproto.Capability.Server value) {
          this.setCap(new org.capnproto.Capability.Client(value));
        }
        public void setCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.Capability.Client> value) {
          this.setCap(new org.capnproto.Capability.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Capability.Client getCap() {
          return _getPointerField(org.capnproto.Capability.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.Capability.Client getCap() {
          return new org.capnproto.Capability.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class GetCapParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestPipeline.GetCapParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getN() {
          return _getIntField(0);
        }
        public final void setN(int value) {
          _setIntField(0, value);
        }

        public final boolean hasInCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getInCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public void setInCap(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0, value);
        }
        public void setInCap(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setInCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setInCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setInCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getN() {
          return _getIntField(0);
        }

        public boolean hasInCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getInCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestInterface.Client getInCap() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class GetCapResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestPipeline.GetCapResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasS() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getS() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setS(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setS(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initS(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
        public final org.capnproto.rpctest.Test.TestPipeline.Box.Builder getOutBox() {
          return _getPointerField(org.capnproto.rpctest.Test.TestPipeline.Box.factory, 1, null, 0);
        }
        public final void setOutBox(org.capnproto.rpctest.Test.TestPipeline.Box.Reader value) {
          _setPointerField(org.capnproto.rpctest.Test.TestPipeline.Box.factory,1, value);
        }
        public final org.capnproto.rpctest.Test.TestPipeline.Box.Builder initOutBox() {
          return _initPointerField(org.capnproto.rpctest.Test.TestPipeline.Box.factory,1, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasS() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getS() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

        public boolean hasOutBox() {
          return !_pointerFieldIsNull(1);
        }
        public org.capnproto.rpctest.Test.TestPipeline.Box.Reader getOutBox() {
          return _getPointerField(org.capnproto.rpctest.Test.TestPipeline.Box.factory,1,null, 0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestPipeline.Box.Pipeline getOutBox() {
          var pipeline = this.typelessPipeline().getPointerField((short)1);
          return () -> pipeline;
        }
      }
    }
    public static class TestPointersParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)3);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestPipeline.TestPointersParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0, value);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public final boolean hasObj() {
          return !_pointerFieldIsNull(1);
        }
        public org.capnproto.AnyPointer.Builder getObj() {
          return _getPointerField(org.capnproto.AnyPointer.factory, 1);
        }
        public org.capnproto.AnyPointer.Builder initObj() {
          return _initPointerField(org.capnproto.AnyPointer.factory, 1, 0);
        }
        public org.capnproto.AnyPointer.Builder initObj(int size) {
          return _initPointerField(org.capnproto.AnyPointer.factory, 1, size);
        }

        public final boolean hasList() {
          return !_pointerFieldIsNull(2);
        }
        public final org.capnproto.CapabilityList.Builder getList() {
          return _getPointerField(org.capnproto.CapabilityList.factory, 2, null, 0);
        }
        public final void setList(org.capnproto.CapabilityList.Reader value) {
          _setPointerField(org.capnproto.CapabilityList.factory, 2, value);
        }
        public final org.capnproto.CapabilityList.Builder initList(int size) {
          return _initPointerField(org.capnproto.CapabilityList.factory, 2, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public boolean hasObj() {
          return !_pointerFieldIsNull(1);
        }
        public org.capnproto.AnyPointer.Reader getObj() {
          return _getPointerField(org.capnproto.AnyPointer.factory, 1);
        }
        public final boolean hasList() {
          return !_pointerFieldIsNull(2);
        }
        public final org.capnproto.CapabilityList.Reader getList() {
          return _getPointerField(org.capnproto.CapabilityList.factory, 2, null, 0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class TestPointersResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestPipeline.TestPointersResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class GetAnyCapParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestPipeline.GetAnyCapParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getN() {
          return _getIntField(0);
        }
        public final void setN(int value) {
          _setIntField(0, value);
        }

        public final boolean hasInCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Capability.Client getInCap() {
          return _getPointerField(org.capnproto.Capability.factory, 0);
        }
        public void setInCap(org.capnproto.Capability.Client value) {
          _setPointerField(org.capnproto.Capability.factory, 0, value);
        }
        public void setInCap(org.capnproto.Capability.Server value) {
          this.setInCap(new org.capnproto.Capability.Client(value));
        }
        public void setInCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.Capability.Client> value) {
          this.setInCap(new org.capnproto.Capability.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getN() {
          return _getIntField(0);
        }

        public boolean hasInCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Capability.Client getInCap() {
          return _getPointerField(org.capnproto.Capability.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.Capability.Client getInCap() {
          return new org.capnproto.Capability.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class GetAnyCapResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestPipeline.GetAnyCapResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasS() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getS() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setS(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setS(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initS(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
        public final org.capnproto.rpctest.Test.TestPipeline.AnyBox.Builder getOutBox() {
          return _getPointerField(org.capnproto.rpctest.Test.TestPipeline.AnyBox.factory, 1, null, 0);
        }
        public final void setOutBox(org.capnproto.rpctest.Test.TestPipeline.AnyBox.Reader value) {
          _setPointerField(org.capnproto.rpctest.Test.TestPipeline.AnyBox.factory,1, value);
        }
        public final org.capnproto.rpctest.Test.TestPipeline.AnyBox.Builder initOutBox() {
          return _initPointerField(org.capnproto.rpctest.Test.TestPipeline.AnyBox.factory,1, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasS() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getS() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

        public boolean hasOutBox() {
          return !_pointerFieldIsNull(1);
        }
        public org.capnproto.rpctest.Test.TestPipeline.AnyBox.Reader getOutBox() {
          return _getPointerField(org.capnproto.rpctest.Test.TestPipeline.AnyBox.factory,1,null, 0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestPipeline.AnyBox.Pipeline getOutBox() {
          var pipeline = this.typelessPipeline().getPointerField((short)1);
          return () -> pipeline;
        }
      }
    }
  }

  public static class TestCallOrder {
    public static final class Factory
        extends org.capnproto.Capability.Factory<Client> {
      public Factory() {
      }
      public final Client newClient(org.capnproto.ClientHook hook) {
        return new Client(hook);
      }
    }

    public static final Factory factory = new Factory();

    public static class Client
        extends org.capnproto.Capability.Client {
      public Client() {}
      public Client(org.capnproto.ClientHook hook) { super(hook); }
      public Client(org.capnproto.Capability.Client cap) { super(cap); }
      public Client(Server server) { super(server); }
      public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
        super(promise);
      }
      public static final class Methods {
        public static final class getCallSequence {
          public interface Request extends org.capnproto.Request<GetCallSequenceParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<GetCallSequenceResults.Reader>
              implements GetCallSequenceResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(GetCallSequenceResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
      }
      public Methods.getCallSequence.Request getCallSequenceRequest() {
        var result = newCall(GetCallSequenceParams.factory, 0xd3227aa40b221f5cL, (short)0);
        return () -> result;
      }
    }
    public static abstract class Server
        extends org.capnproto.Capability.Server {
      protected org.capnproto.DispatchCallResult dispatchCall(
          long interfaceId, short methodId,
          org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        if (interfaceId == 0xd3227aa40b221f5cL) {
            return this.dispatchCallInternal(methodId, context);
        }
        else {
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestCallOrder", interfaceId));
        }
      }
      private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        switch (methodId) {
      case 0:
        return org.capnproto.Capability.Server.result(
          this.getCallSequence(org.capnproto.Capability.Server.internalGetTypedContext(
            GetCallSequenceParams.factory, GetCallSequenceResults.factory, context)));
        default:
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestCallOrder", 0xd3227aa40b221f5cL, methodId));
        }
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> getCallSequence(org.capnproto.CallContext<GetCallSequenceParams.Reader, GetCallSequenceResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestCallOrder", "getCallSequence", 0xd3227aa40b221f5cL, (short)0);
      }
      protected Client thisCap() { return new Client(super.thisCap()); }
    }
    public static class GetCallSequenceParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestCallOrder.GetCallSequenceParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getExpected() {
          return _getIntField(0);
        }
        public final void setExpected(int value) {
          _setIntField(0, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getExpected() {
          return _getIntField(0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class GetCallSequenceResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestCallOrder.GetCallSequenceResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getN() {
          return _getIntField(0);
        }
        public final void setN(int value) {
          _setIntField(0, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getN() {
          return _getIntField(0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
  }

  public static class TestTailCallee {
    public static final class Factory
        extends org.capnproto.Capability.Factory<Client> {
      public Factory() {
      }
      public final Client newClient(org.capnproto.ClientHook hook) {
        return new Client(hook);
      }
    }

    public static final Factory factory = new Factory();

    public static class Client
        extends org.capnproto.Capability.Client {
      public Client() {}
      public Client(org.capnproto.ClientHook hook) { super(hook); }
      public Client(org.capnproto.Capability.Client cap) { super(cap); }
      public Client(Server server) { super(server); }
      public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
        super(promise);
      }
      public static final class Methods {
        public static final class foo {
          public interface Request extends org.capnproto.Request<FooParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<org.capnproto.rpctest.Test.TestTailCallee.TailResult.Reader>
              implements org.capnproto.rpctest.Test.TestTailCallee.TailResult.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(org.capnproto.rpctest.Test.TestTailCallee.TailResult.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
      }
      public Methods.foo.Request fooRequest() {
        var result = newCall(FooParams.factory, 0xb3c49c6a6be904e6L, (short)0);
        return () -> result;
      }
    }
    public static abstract class Server
        extends org.capnproto.Capability.Server {
      protected org.capnproto.DispatchCallResult dispatchCall(
          long interfaceId, short methodId,
          org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        if (interfaceId == 0xb3c49c6a6be904e6L) {
            return this.dispatchCallInternal(methodId, context);
        }
        else {
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestTailCallee", interfaceId));
        }
      }
      private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        switch (methodId) {
      case 0:
        return org.capnproto.Capability.Server.result(
          this.foo(org.capnproto.Capability.Server.internalGetTypedContext(
            FooParams.factory, org.capnproto.rpctest.Test.TestTailCallee.TailResult.factory, context)));
        default:
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestTailCallee", 0xb3c49c6a6be904e6L, methodId));
        }
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> foo(org.capnproto.CallContext<FooParams.Reader, org.capnproto.rpctest.Test.TestTailCallee.TailResult.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestTailCallee", "foo", 0xb3c49c6a6be904e6L, (short)0);
      }
      protected Client thisCap() { return new Client(super.thisCap()); }
    }
    public static class TailResult {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestTailCallee.TailResult.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getI() {
          return _getIntField(0);
        }
        public final void setI(int value) {
          _setIntField(0, value);
        }

        public final boolean hasT() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getT() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setT(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setT(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initT(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
        public final boolean hasC() {
          return !_pointerFieldIsNull(1);
        }
        public org.capnproto.rpctest.Test.TestCallOrder.Client getC() {
          return _getPointerField(org.capnproto.rpctest.Test.TestCallOrder.factory, 1);
        }
        public void setC(org.capnproto.rpctest.Test.TestCallOrder.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestCallOrder.factory, 1, value);
        }
        public void setC(org.capnproto.rpctest.Test.TestCallOrder.Server value) {
          this.setC(new org.capnproto.rpctest.Test.TestCallOrder.Client(value));
        }
        public void setC(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestCallOrder.Client> value) {
          this.setC(new org.capnproto.rpctest.Test.TestCallOrder.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getI() {
          return _getIntField(0);
        }

        public boolean hasT() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getT() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

        public boolean hasC() {
          return !_pointerFieldIsNull(1);
        }
        public org.capnproto.rpctest.Test.TestCallOrder.Client getC() {
          return _getPointerField(org.capnproto.rpctest.Test.TestCallOrder.factory, 1);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestCallOrder.Client getC() {
          return new org.capnproto.rpctest.Test.TestCallOrder.Client(
            this.typelessPipeline().getPointerField((short)1).asCap()
          );
        }
      }
    }
    public static class FooParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestTailCallee.FooParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getI() {
          return _getIntField(0);
        }
        public final void setI(int value) {
          _setIntField(0, value);
        }

        public final boolean hasT() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getT() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setT(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setT(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initT(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getI() {
          return _getIntField(0);
        }

        public boolean hasT() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getT() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
  }

  public static class TestTailCaller {
    public static final class Factory
        extends org.capnproto.Capability.Factory<Client> {
      public Factory() {
      }
      public final Client newClient(org.capnproto.ClientHook hook) {
        return new Client(hook);
      }
    }

    public static final Factory factory = new Factory();

    public static class Client
        extends org.capnproto.Capability.Client {
      public Client() {}
      public Client(org.capnproto.ClientHook hook) { super(hook); }
      public Client(org.capnproto.Capability.Client cap) { super(cap); }
      public Client(Server server) { super(server); }
      public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
        super(promise);
      }
      public static final class Methods {
        public static final class foo {
          public interface Request extends org.capnproto.Request<FooParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<org.capnproto.rpctest.Test.TestTailCallee.TailResult.Reader>
              implements org.capnproto.rpctest.Test.TestTailCallee.TailResult.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(org.capnproto.rpctest.Test.TestTailCallee.TailResult.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
      }
      public Methods.foo.Request fooRequest() {
        var result = newCall(FooParams.factory, 0xa0f5f4f5d2cf0acfL, (short)0);
        return () -> result;
      }
    }
    public static abstract class Server
        extends org.capnproto.Capability.Server {
      protected org.capnproto.DispatchCallResult dispatchCall(
          long interfaceId, short methodId,
          org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        if (interfaceId == 0xa0f5f4f5d2cf0acfL) {
            return this.dispatchCallInternal(methodId, context);
        }
        else {
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestTailCaller", interfaceId));
        }
      }
      private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        switch (methodId) {
      case 0:
        return org.capnproto.Capability.Server.result(
          this.foo(org.capnproto.Capability.Server.internalGetTypedContext(
            FooParams.factory, org.capnproto.rpctest.Test.TestTailCallee.TailResult.factory, context)));
        default:
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestTailCaller", 0xa0f5f4f5d2cf0acfL, methodId));
        }
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> foo(org.capnproto.CallContext<FooParams.Reader, org.capnproto.rpctest.Test.TestTailCallee.TailResult.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestTailCaller", "foo", 0xa0f5f4f5d2cf0acfL, (short)0);
      }
      protected Client thisCap() { return new Client(super.thisCap()); }
    }
    public static class FooParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestTailCaller.FooParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getI() {
          return _getIntField(0);
        }
        public final void setI(int value) {
          _setIntField(0, value);
        }

        public final boolean hasCallee() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestTailCallee.Client getCallee() {
          return _getPointerField(org.capnproto.rpctest.Test.TestTailCallee.factory, 0);
        }
        public void setCallee(org.capnproto.rpctest.Test.TestTailCallee.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestTailCallee.factory, 0, value);
        }
        public void setCallee(org.capnproto.rpctest.Test.TestTailCallee.Server value) {
          this.setCallee(new org.capnproto.rpctest.Test.TestTailCallee.Client(value));
        }
        public void setCallee(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestTailCallee.Client> value) {
          this.setCallee(new org.capnproto.rpctest.Test.TestTailCallee.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getI() {
          return _getIntField(0);
        }

        public boolean hasCallee() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestTailCallee.Client getCallee() {
          return _getPointerField(org.capnproto.rpctest.Test.TestTailCallee.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestTailCallee.Client getCallee() {
          return new org.capnproto.rpctest.Test.TestTailCallee.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
  }

  public static class TestStreaming {
    public static final class Factory
        extends org.capnproto.Capability.Factory<Client> {
      public Factory() {
      }
      public final Client newClient(org.capnproto.ClientHook hook) {
        return new Client(hook);
      }
    }

    public static final Factory factory = new Factory();

    public static class Client
        extends org.capnproto.Capability.Client {
      public Client() {}
      public Client(org.capnproto.ClientHook hook) { super(hook); }
      public Client(org.capnproto.Capability.Client cap) { super(cap); }
      public Client(Server server) { super(server); }
      public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
        super(promise);
      }
      public static final class Methods {
        public static final class finishStream {
          public interface Request extends org.capnproto.Request<FinishStreamParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<FinishStreamResults.Reader>
              implements FinishStreamResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(FinishStreamResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
      }
      public org.capnproto.StreamingRequest<DoStreamIParams.Builder> doStreamIRequest() {
        return newStreamingCall(DoStreamIParams.factory, 0xd97ab79dc9a31ee1L, (short)0);
      }
      public org.capnproto.StreamingRequest<DoStreamJParams.Builder> doStreamJRequest() {
        return newStreamingCall(DoStreamJParams.factory, 0xd97ab79dc9a31ee1L, (short)1);
      }
      public Methods.finishStream.Request finishStreamRequest() {
        var result = newCall(FinishStreamParams.factory, 0xd97ab79dc9a31ee1L, (short)2);
        return () -> result;
      }
    }
    public static abstract class Server
        extends org.capnproto.Capability.Server {
      protected org.capnproto.DispatchCallResult dispatchCall(
          long interfaceId, short methodId,
          org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        if (interfaceId == 0xd97ab79dc9a31ee1L) {
            return this.dispatchCallInternal(methodId, context);
        }
        else {
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestStreaming", interfaceId));
        }
      }
      private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        switch (methodId) {
      case 0:
        return org.capnproto.Capability.Server.streamResult(
          this.doStreamI(org.capnproto.Capability.Server.internalGetTypedStreamingContext(
            DoStreamIParams.factory, context)));
      case 1:
        return org.capnproto.Capability.Server.streamResult(
          this.doStreamJ(org.capnproto.Capability.Server.internalGetTypedStreamingContext(
            DoStreamJParams.factory, context)));
      case 2:
        return org.capnproto.Capability.Server.result(
          this.finishStream(org.capnproto.Capability.Server.internalGetTypedContext(
            FinishStreamParams.factory, FinishStreamResults.factory, context)));
        default:
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestStreaming", 0xd97ab79dc9a31ee1L, methodId));
        }
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> doStreamI(org.capnproto.StreamingCallContext<DoStreamIParams.Reader> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestStreaming", "doStreamI",
          0xd97ab79dc9a31ee1L, (short)0);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> doStreamJ(org.capnproto.StreamingCallContext<DoStreamJParams.Reader> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestStreaming", "doStreamJ",
          0xd97ab79dc9a31ee1L, (short)1);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> finishStream(org.capnproto.CallContext<FinishStreamParams.Reader, FinishStreamResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestStreaming", "finishStream", 0xd97ab79dc9a31ee1L, (short)2);
      }
      protected Client thisCap() { return new Client(super.thisCap()); }
    }
    public static class DoStreamIParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestStreaming.DoStreamIParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getI() {
          return _getIntField(0);
        }
        public final void setI(int value) {
          _setIntField(0, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getI() {
          return _getIntField(0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class DoStreamJParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestStreaming.DoStreamJParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getJ() {
          return _getIntField(0);
        }
        public final void setJ(int value) {
          _setIntField(0, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getJ() {
          return _getIntField(0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class FinishStreamParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestStreaming.FinishStreamParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class FinishStreamResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestStreaming.FinishStreamResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getTotalI() {
          return _getIntField(0);
        }
        public final void setTotalI(int value) {
          _setIntField(0, value);
        }

        public final int getTotalJ() {
          return _getIntField(1);
        }
        public final void setTotalJ(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getTotalI() {
          return _getIntField(0);
        }

        public final int getTotalJ() {
          return _getIntField(1);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
  }

  public static class TestHandle {
    public static final class Factory
        extends org.capnproto.Capability.Factory<Client> {
      public Factory() {
      }
      public final Client newClient(org.capnproto.ClientHook hook) {
        return new Client(hook);
      }
    }

    public static final Factory factory = new Factory();

    public static class Client
        extends org.capnproto.Capability.Client {
      public Client() {}
      public Client(org.capnproto.ClientHook hook) { super(hook); }
      public Client(org.capnproto.Capability.Client cap) { super(cap); }
      public Client(Server server) { super(server); }
      public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
        super(promise);
      }
      public static final class Methods {
      }
    }
    public static abstract class Server
        extends org.capnproto.Capability.Server {
      protected org.capnproto.DispatchCallResult dispatchCall(
          long interfaceId, short methodId,
          org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        if (interfaceId == 0xecb58d5143a416cbL) {
            return this.dispatchCallInternal(methodId, context);
        }
        else {
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestHandle", interfaceId));
        }
      }
      private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        switch (methodId) {
        default:
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestHandle", 0xecb58d5143a416cbL, methodId));
        }
      }
      protected Client thisCap() { return new Client(super.thisCap()); }
    }
  }

  public static class TestMoreStuff {
    public static final class Factory
        extends org.capnproto.Capability.Factory<Client> {
      public Factory() {
      }
      public final Client newClient(org.capnproto.ClientHook hook) {
        return new Client(hook);
      }
    }

    public static final Factory factory = new Factory();

    public static class Client
        extends org.capnproto.rpctest.Test.TestCallOrder.Client {
      public Client() {}
      public Client(org.capnproto.ClientHook hook) { super(hook); }
      public Client(org.capnproto.Capability.Client cap) { super(cap); }
      public Client(Server server) { super(server); }
      public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
        super(promise);
      }
      public static final class Methods {
        public static final class callFoo {
          public interface Request extends org.capnproto.Request<CallFooParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<CallFooResults.Reader>
              implements CallFooResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(CallFooResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class callFooWhenResolved {
          public interface Request extends org.capnproto.Request<CallFooWhenResolvedParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<CallFooWhenResolvedResults.Reader>
              implements CallFooWhenResolvedResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(CallFooWhenResolvedResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class neverReturn {
          public interface Request extends org.capnproto.Request<NeverReturnParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<NeverReturnResults.Reader>
              implements NeverReturnResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(NeverReturnResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class hold {
          public interface Request extends org.capnproto.Request<HoldParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<HoldResults.Reader>
              implements HoldResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(HoldResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class callHeld {
          public interface Request extends org.capnproto.Request<CallHeldParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<CallHeldResults.Reader>
              implements CallHeldResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(CallHeldResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class getHeld {
          public interface Request extends org.capnproto.Request<GetHeldParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<GetHeldResults.Reader>
              implements GetHeldResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(GetHeldResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class echo {
          public interface Request extends org.capnproto.Request<EchoParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<EchoResults.Reader>
              implements EchoResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(EchoResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class expectCancel {
          public interface Request extends org.capnproto.Request<ExpectCancelParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<ExpectCancelResults.Reader>
              implements ExpectCancelResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(ExpectCancelResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class methodWithDefaults {
          public interface Request extends org.capnproto.Request<MethodWithDefaultsParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<MethodWithDefaultsResults.Reader>
              implements MethodWithDefaultsResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(MethodWithDefaultsResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class getHandle {
          public interface Request extends org.capnproto.Request<GetHandleParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<GetHandleResults.Reader>
              implements GetHandleResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(GetHandleResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class getNull {
          public interface Request extends org.capnproto.Request<GetNullParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<GetNullResults.Reader>
              implements GetNullResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(GetNullResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class getEnormousString {
          public interface Request extends org.capnproto.Request<GetEnormousStringParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<GetEnormousStringResults.Reader>
              implements GetEnormousStringResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(GetEnormousStringResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class methodWithNullDefault {
          public interface Request extends org.capnproto.Request<MethodWithNullDefaultParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<MethodWithNullDefaultResults.Reader>
              implements MethodWithNullDefaultResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(MethodWithNullDefaultResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
        public static final class writeToFd {
          public interface Request extends org.capnproto.Request<WriteToFdParams.Builder> {
            default Response send() {
              return new Response(this.sendInternal());
            }
          }
          public static final class Response
              extends org.capnproto.RemotePromise<WriteToFdResults.Reader>
              implements WriteToFdResults.Pipeline {
            public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
              super(WriteToFdResults.factory, response);
            }
            public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
              return this.pipeline();
            }
          }
        }
      }
      public Methods.callFoo.Request callFooRequest() {
        var result = newCall(CallFooParams.factory, 0xa4baf342da0369dfL, (short)0);
        return () -> result;
      }
      public Methods.callFooWhenResolved.Request callFooWhenResolvedRequest() {
        var result = newCall(CallFooWhenResolvedParams.factory, 0xa4baf342da0369dfL, (short)1);
        return () -> result;
      }
      public Methods.neverReturn.Request neverReturnRequest() {
        var result = newCall(NeverReturnParams.factory, 0xa4baf342da0369dfL, (short)2);
        return () -> result;
      }
      public Methods.hold.Request holdRequest() {
        var result = newCall(HoldParams.factory, 0xa4baf342da0369dfL, (short)3);
        return () -> result;
      }
      public Methods.callHeld.Request callHeldRequest() {
        var result = newCall(CallHeldParams.factory, 0xa4baf342da0369dfL, (short)4);
        return () -> result;
      }
      public Methods.getHeld.Request getHeldRequest() {
        var result = newCall(GetHeldParams.factory, 0xa4baf342da0369dfL, (short)5);
        return () -> result;
      }
      public Methods.echo.Request echoRequest() {
        var result = newCall(EchoParams.factory, 0xa4baf342da0369dfL, (short)6);
        return () -> result;
      }
      public Methods.expectCancel.Request expectCancelRequest() {
        var result = newCall(ExpectCancelParams.factory, 0xa4baf342da0369dfL, (short)7);
        return () -> result;
      }
      public Methods.methodWithDefaults.Request methodWithDefaultsRequest() {
        var result = newCall(MethodWithDefaultsParams.factory, 0xa4baf342da0369dfL, (short)8);
        return () -> result;
      }
      public Methods.getHandle.Request getHandleRequest() {
        var result = newCall(GetHandleParams.factory, 0xa4baf342da0369dfL, (short)9);
        return () -> result;
      }
      public Methods.getNull.Request getNullRequest() {
        var result = newCall(GetNullParams.factory, 0xa4baf342da0369dfL, (short)10);
        return () -> result;
      }
      public Methods.getEnormousString.Request getEnormousStringRequest() {
        var result = newCall(GetEnormousStringParams.factory, 0xa4baf342da0369dfL, (short)11);
        return () -> result;
      }
      public Methods.methodWithNullDefault.Request methodWithNullDefaultRequest() {
        var result = newCall(MethodWithNullDefaultParams.factory, 0xa4baf342da0369dfL, (short)12);
        return () -> result;
      }
      public Methods.writeToFd.Request writeToFdRequest() {
        var result = newCall(WriteToFdParams.factory, 0xa4baf342da0369dfL, (short)13);
        return () -> result;
      }
    }
    public static abstract class Server
        extends org.capnproto.rpctest.Test.TestCallOrder.Server {
      protected org.capnproto.DispatchCallResult dispatchCall(
          long interfaceId, short methodId,
          org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        if (interfaceId == 0xa4baf342da0369dfL) {
            return this.dispatchCallInternal(methodId, context);
        }
        else if (interfaceId == 0xd3227aa40b221f5cL) {
            return super.dispatchCall(interfaceId, methodId, context);
        }
        else {
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestMoreStuff", interfaceId));
        }
      }
      private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
        switch (methodId) {
      case 0:
        return org.capnproto.Capability.Server.result(
          this.callFoo(org.capnproto.Capability.Server.internalGetTypedContext(
            CallFooParams.factory, CallFooResults.factory, context)));
      case 1:
        return org.capnproto.Capability.Server.result(
          this.callFooWhenResolved(org.capnproto.Capability.Server.internalGetTypedContext(
            CallFooWhenResolvedParams.factory, CallFooWhenResolvedResults.factory, context)));
      case 2:
        return org.capnproto.Capability.Server.result(
          this.neverReturn(org.capnproto.Capability.Server.internalGetTypedContext(
            NeverReturnParams.factory, NeverReturnResults.factory, context)));
      case 3:
        return org.capnproto.Capability.Server.result(
          this.hold(org.capnproto.Capability.Server.internalGetTypedContext(
            HoldParams.factory, HoldResults.factory, context)));
      case 4:
        return org.capnproto.Capability.Server.result(
          this.callHeld(org.capnproto.Capability.Server.internalGetTypedContext(
            CallHeldParams.factory, CallHeldResults.factory, context)));
      case 5:
        return org.capnproto.Capability.Server.result(
          this.getHeld(org.capnproto.Capability.Server.internalGetTypedContext(
            GetHeldParams.factory, GetHeldResults.factory, context)));
      case 6:
        return org.capnproto.Capability.Server.result(
          this.echo(org.capnproto.Capability.Server.internalGetTypedContext(
            EchoParams.factory, EchoResults.factory, context)));
      case 7:
        return org.capnproto.Capability.Server.result(
          this.expectCancel(org.capnproto.Capability.Server.internalGetTypedContext(
            ExpectCancelParams.factory, ExpectCancelResults.factory, context)));
      case 8:
        return org.capnproto.Capability.Server.result(
          this.methodWithDefaults(org.capnproto.Capability.Server.internalGetTypedContext(
            MethodWithDefaultsParams.factory, MethodWithDefaultsResults.factory, context)));
      case 9:
        return org.capnproto.Capability.Server.result(
          this.getHandle(org.capnproto.Capability.Server.internalGetTypedContext(
            GetHandleParams.factory, GetHandleResults.factory, context)));
      case 10:
        return org.capnproto.Capability.Server.result(
          this.getNull(org.capnproto.Capability.Server.internalGetTypedContext(
            GetNullParams.factory, GetNullResults.factory, context)));
      case 11:
        return org.capnproto.Capability.Server.result(
          this.getEnormousString(org.capnproto.Capability.Server.internalGetTypedContext(
            GetEnormousStringParams.factory, GetEnormousStringResults.factory, context)));
      case 12:
        return org.capnproto.Capability.Server.result(
          this.methodWithNullDefault(org.capnproto.Capability.Server.internalGetTypedContext(
            MethodWithNullDefaultParams.factory, MethodWithNullDefaultResults.factory, context)));
      case 13:
        return org.capnproto.Capability.Server.result(
          this.writeToFd(org.capnproto.Capability.Server.internalGetTypedContext(
            WriteToFdParams.factory, WriteToFdResults.factory, context)));
        default:
          return org.capnproto.Capability.Server.result(
            org.capnproto.Capability.Server.internalUnimplemented("TestMoreStuff", 0xa4baf342da0369dfL, methodId));
        }
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> callFoo(org.capnproto.CallContext<CallFooParams.Reader, CallFooResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "callFoo", 0xa4baf342da0369dfL, (short)0);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> callFooWhenResolved(org.capnproto.CallContext<CallFooWhenResolvedParams.Reader, CallFooWhenResolvedResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "callFooWhenResolved", 0xa4baf342da0369dfL, (short)1);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> neverReturn(org.capnproto.CallContext<NeverReturnParams.Reader, NeverReturnResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "neverReturn", 0xa4baf342da0369dfL, (short)2);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> hold(org.capnproto.CallContext<HoldParams.Reader, HoldResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "hold", 0xa4baf342da0369dfL, (short)3);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> callHeld(org.capnproto.CallContext<CallHeldParams.Reader, CallHeldResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "callHeld", 0xa4baf342da0369dfL, (short)4);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> getHeld(org.capnproto.CallContext<GetHeldParams.Reader, GetHeldResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "getHeld", 0xa4baf342da0369dfL, (short)5);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> echo(org.capnproto.CallContext<EchoParams.Reader, EchoResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "echo", 0xa4baf342da0369dfL, (short)6);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> expectCancel(org.capnproto.CallContext<ExpectCancelParams.Reader, ExpectCancelResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "expectCancel", 0xa4baf342da0369dfL, (short)7);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> methodWithDefaults(org.capnproto.CallContext<MethodWithDefaultsParams.Reader, MethodWithDefaultsResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "methodWithDefaults", 0xa4baf342da0369dfL, (short)8);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> getHandle(org.capnproto.CallContext<GetHandleParams.Reader, GetHandleResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "getHandle", 0xa4baf342da0369dfL, (short)9);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> getNull(org.capnproto.CallContext<GetNullParams.Reader, GetNullResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "getNull", 0xa4baf342da0369dfL, (short)10);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> getEnormousString(org.capnproto.CallContext<GetEnormousStringParams.Reader, GetEnormousStringResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "getEnormousString", 0xa4baf342da0369dfL, (short)11);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> methodWithNullDefault(org.capnproto.CallContext<MethodWithNullDefaultParams.Reader, MethodWithNullDefaultResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "methodWithNullDefault", 0xa4baf342da0369dfL, (short)12);
      }
      protected java.util.concurrent.CompletableFuture<java.lang.Void> writeToFd(org.capnproto.CallContext<WriteToFdParams.Reader, WriteToFdResults.Builder> context) {
        return org.capnproto.Capability.Server.internalUnimplemented(
          "test.capnp:TestMoreStuff", "writeToFd", 0xa4baf342da0369dfL, (short)13);
      }
      protected Client thisCap() { return new Client(super.thisCap()); }
    }
    public static class CallFooParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.CallFooParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0, value);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class CallFooResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.CallFooResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasS() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getS() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setS(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setS(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initS(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasS() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getS() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class CallFooWhenResolvedParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.CallFooWhenResolvedParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0, value);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class CallFooWhenResolvedResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.CallFooWhenResolvedResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasS() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getS() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setS(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setS(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initS(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasS() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getS() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class NeverReturnParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.NeverReturnParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0, value);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class NeverReturnResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.NeverReturnResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasCapCopy() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCapCopy() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public void setCapCopy(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0, value);
        }
        public void setCapCopy(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setCapCopy(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setCapCopy(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setCapCopy(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasCapCopy() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCapCopy() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestInterface.Client getCapCopy() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class HoldParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.HoldParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0, value);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class HoldResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.HoldResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class CallHeldParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.CallHeldParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class CallHeldResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.CallHeldResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasS() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getS() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setS(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setS(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initS(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasS() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getS() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class GetHeldParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.GetHeldParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class GetHeldResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.GetHeldResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0, value);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class EchoParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.EchoParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestCallOrder.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestCallOrder.factory, 0);
        }
        public void setCap(org.capnproto.rpctest.Test.TestCallOrder.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestCallOrder.factory, 0, value);
        }
        public void setCap(org.capnproto.rpctest.Test.TestCallOrder.Server value) {
          this.setCap(new org.capnproto.rpctest.Test.TestCallOrder.Client(value));
        }
        public void setCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestCallOrder.Client> value) {
          this.setCap(new org.capnproto.rpctest.Test.TestCallOrder.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestCallOrder.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestCallOrder.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestCallOrder.Client getCap() {
          return new org.capnproto.rpctest.Test.TestCallOrder.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class EchoResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.EchoResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestCallOrder.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestCallOrder.factory, 0);
        }
        public void setCap(org.capnproto.rpctest.Test.TestCallOrder.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestCallOrder.factory, 0, value);
        }
        public void setCap(org.capnproto.rpctest.Test.TestCallOrder.Server value) {
          this.setCap(new org.capnproto.rpctest.Test.TestCallOrder.Client(value));
        }
        public void setCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestCallOrder.Client> value) {
          this.setCap(new org.capnproto.rpctest.Test.TestCallOrder.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestCallOrder.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestCallOrder.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestCallOrder.Client getCap() {
          return new org.capnproto.rpctest.Test.TestCallOrder.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class ExpectCancelParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.ExpectCancelParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0, value);
        }
        public void setCap(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setCap(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestInterface.Client getCap() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class ExpectCancelResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.ExpectCancelResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class MethodWithDefaultsParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.MethodWithDefaultsParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasA() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getA() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setA(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setA(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initA(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
        public final int getB() {
          return _getIntField(0, (int)123);
        }
        public final void setB(int value) {
          _setIntField(0, value, (int)123);
        }

        public final boolean hasC() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.Text.Builder getC() {
          return _getPointerField(org.capnproto.Text.factory, 1, Schemas.b_da275a23374408a6.buffer, 65, 3);
        }
        public final void setC(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 1, value);
        }
        public final void setC(String value) {
          _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initC(int size) {
          return _initPointerField(org.capnproto.Text.factory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasA() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getA() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

        public final int getB() {
          return _getIntField(0, (int)123);
        }

        public boolean hasC() {
          return !_pointerFieldIsNull(1);
        }
        public org.capnproto.Text.Reader getC() {
          return _getPointerField(org.capnproto.Text.factory, 1, Schemas.b_da275a23374408a6.buffer, 65, 3);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class MethodWithDefaultsResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.MethodWithDefaultsResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasD() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getD() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setD(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setD(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initD(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
        public final boolean hasE() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.Text.Builder getE() {
          return _getPointerField(org.capnproto.Text.factory, 1, Schemas.b_ef0b7814ed0f1cba.buffer, 50, 3);
        }
        public final void setE(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 1, value);
        }
        public final void setE(String value) {
          _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initE(int size) {
          return _initPointerField(org.capnproto.Text.factory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasD() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getD() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

        public boolean hasE() {
          return !_pointerFieldIsNull(1);
        }
        public org.capnproto.Text.Reader getE() {
          return _getPointerField(org.capnproto.Text.factory, 1, Schemas.b_ef0b7814ed0f1cba.buffer, 50, 3);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class GetHandleParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.GetHandleParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class GetHandleResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.GetHandleResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasHandle() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestHandle.Client getHandle() {
          return _getPointerField(org.capnproto.rpctest.Test.TestHandle.factory, 0);
        }
        public void setHandle(org.capnproto.rpctest.Test.TestHandle.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestHandle.factory, 0, value);
        }
        public void setHandle(org.capnproto.rpctest.Test.TestHandle.Server value) {
          this.setHandle(new org.capnproto.rpctest.Test.TestHandle.Client(value));
        }
        public void setHandle(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestHandle.Client> value) {
          this.setHandle(new org.capnproto.rpctest.Test.TestHandle.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasHandle() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestHandle.Client getHandle() {
          return _getPointerField(org.capnproto.rpctest.Test.TestHandle.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestHandle.Client getHandle() {
          return new org.capnproto.rpctest.Test.TestHandle.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class GetNullParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.GetNullParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class GetNullResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.GetNullResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasNullCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestMoreStuff.Client getNullCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestMoreStuff.factory, 0);
        }
        public void setNullCap(org.capnproto.rpctest.Test.TestMoreStuff.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestMoreStuff.factory, 0, value);
        }
        public void setNullCap(org.capnproto.rpctest.Test.TestMoreStuff.Server value) {
          this.setNullCap(new org.capnproto.rpctest.Test.TestMoreStuff.Client(value));
        }
        public void setNullCap(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestMoreStuff.Client> value) {
          this.setNullCap(new org.capnproto.rpctest.Test.TestMoreStuff.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasNullCap() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestMoreStuff.Client getNullCap() {
          return _getPointerField(org.capnproto.rpctest.Test.TestMoreStuff.factory, 0);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestMoreStuff.Client getNullCap() {
          return new org.capnproto.rpctest.Test.TestMoreStuff.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
    public static class GetEnormousStringParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.GetEnormousStringParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class GetEnormousStringResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.GetEnormousStringResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasStr() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getStr() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setStr(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setStr(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initStr(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasStr() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getStr() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class MethodWithNullDefaultParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.MethodWithNullDefaultParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasA() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getA() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setA(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setA(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initA(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
        public final boolean hasB() {
          return !_pointerFieldIsNull(1);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getB() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 1);
        }
        public void setB(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 1, value);
        }
        public void setB(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setB(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setB(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setB(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasA() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getA() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

        public boolean hasB() {
          return !_pointerFieldIsNull(1);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getB() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 1);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestInterface.Client getB() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)1).asCap()
          );
        }
      }
    }
    public static class MethodWithNullDefaultResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.MethodWithNullDefaultResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
      }
    }
    public static class WriteToFdParams {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.WriteToFdParams.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasFdCap1() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getFdCap1() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public void setFdCap1(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0, value);
        }
        public void setFdCap1(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setFdCap1(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setFdCap1(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setFdCap1(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public final boolean hasFdCap2() {
          return !_pointerFieldIsNull(1);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getFdCap2() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 1);
        }
        public void setFdCap2(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 1, value);
        }
        public void setFdCap2(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setFdCap2(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setFdCap2(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setFdCap2(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasFdCap1() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getFdCap1() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public boolean hasFdCap2() {
          return !_pointerFieldIsNull(1);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getFdCap2() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 1);
        }
      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestInterface.Client getFdCap1() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
        default org.capnproto.rpctest.Test.TestInterface.Client getFdCap2() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)1).asCap()
          );
        }
      }
    }
    public static class WriteToFdResults {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return TestMoreStuff.WriteToFdResults.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasFdCap3() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getFdCap3() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public void setFdCap3(org.capnproto.rpctest.Test.TestInterface.Client value) {
          _setPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0, value);
        }
        public void setFdCap3(org.capnproto.rpctest.Test.TestInterface.Server value) {
          this.setFdCap3(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public void setFdCap3(java.util.concurrent.CompletableFuture<? extends org.capnproto.rpctest.Test.TestInterface.Client> value) {
          this.setFdCap3(new org.capnproto.rpctest.Test.TestInterface.Client(value));
        }
        public final boolean getSecondFdPresent() {
          return _getBooleanField(0);
        }
        public final void setSecondFdPresent(boolean value) {
          _setBooleanField(0, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasFdCap3() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.rpctest.Test.TestInterface.Client getFdCap3() {
          return _getPointerField(org.capnproto.rpctest.Test.TestInterface.factory, 0);
        }
        public final boolean getSecondFdPresent() {
          return _getBooleanField(0);
        }

      }

      public interface Pipeline extends org.capnproto.Pipeline {
        default org.capnproto.rpctest.Test.TestInterface.Client getFdCap3() {
          return new org.capnproto.rpctest.Test.TestInterface.Client(
            this.typelessPipeline().getPointerField((short)0).asCap()
          );
        }
      }
    }
  }

  public static class TestGenerics {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
    public static final class Factory<Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader> extends org.capnproto.StructFactory<Builder<Foo_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Builder>, Reader<Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Reader>> {
      final org.capnproto.PointerFactory<Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader> Foo_d3b8766f80ae193b_Factory;
      final org.capnproto.PointerFactory<Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader> Bar_d3b8766f80ae193b_Factory;
      public Factory(org.capnproto.PointerFactory<Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader> Foo_d3b8766f80ae193b_Factory, org.capnproto.PointerFactory<Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader> Bar_d3b8766f80ae193b_Factory) {
        this.Foo_d3b8766f80ae193b_Factory = Foo_d3b8766f80ae193b_Factory;
        this.Bar_d3b8766f80ae193b_Factory = Bar_d3b8766f80ae193b_Factory;
      }
      public final Reader<Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Reader> constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader<Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Reader>(Foo_d3b8766f80ae193b_Factory, Bar_d3b8766f80ae193b_Factory, segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder<Foo_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Builder> constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder<Foo_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Builder>(Foo_d3b8766f80ae193b_Factory, Bar_d3b8766f80ae193b_Factory, segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TestGenerics.STRUCT_SIZE;
      }
      public final Reader<Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Reader> asReader(Builder<Foo_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Builder> builder) {
        return builder.asReader(this);
      }
    }
    public static final <Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader>Factory<Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader>
      newFactory(org.capnproto.PointerFactory<Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader> Foo_d3b8766f80ae193b_Factory, org.capnproto.PointerFactory<Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader> Bar_d3b8766f80ae193b_Factory){
     return new Factory<Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader>(Foo_d3b8766f80ae193b_Factory, Bar_d3b8766f80ae193b_Factory);
    }
    public static final class Builder<Foo_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Builder> extends org.capnproto.StructBuilder {
      final org.capnproto.PointerFactory<Foo_d3b8766f80ae193b_Builder, ?> Foo_d3b8766f80ae193b_Factory;
      final org.capnproto.PointerFactory<Bar_d3b8766f80ae193b_Builder, ?> Bar_d3b8766f80ae193b_Factory;
      Builder(org.capnproto.PointerFactory<Foo_d3b8766f80ae193b_Builder, ?> Foo_d3b8766f80ae193b_Factory,org.capnproto.PointerFactory<Bar_d3b8766f80ae193b_Builder, ?> Bar_d3b8766f80ae193b_Factory,org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
        this.Foo_d3b8766f80ae193b_Factory = Foo_d3b8766f80ae193b_Factory;
        this.Bar_d3b8766f80ae193b_Factory = Bar_d3b8766f80ae193b_Factory;
      }
      public final <Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Reader>Reader<Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Reader> asReader(TestGenerics.Factory<Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader> factory) {
        return new Reader<Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Reader>(factory.Foo_d3b8766f80ae193b_Factory, factory.Bar_d3b8766f80ae193b_Factory, segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasFoo() {
        return !_pointerFieldIsNull(0);
      }
      public Foo_d3b8766f80ae193b_Builder getFoo() {
        return _getPointerField(Foo_d3b8766f80ae193b_Factory, 0);
      }
      public Foo_d3b8766f80ae193b_Builder initFoo() {
        return _initPointerField(Foo_d3b8766f80ae193b_Factory, 0, 0);
      }
      public Foo_d3b8766f80ae193b_Builder initFoo(int size) {
        return _initPointerField(Foo_d3b8766f80ae193b_Factory, 0, size);
      }
      public <Foo_d3b8766f80ae193b_Reader> void setFoo(org.capnproto.SetPointerBuilder<Foo_d3b8766f80ae193b_Builder,Foo_d3b8766f80ae193b_Reader> factory,Foo_d3b8766f80ae193b_Reader value) {
        _setPointerField(factory, 0, value);
      }

      public final org.capnproto.rpctest.Test.TestGenerics.Builder<Bar_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Builder> getRev() {
        return _getPointerField(org.capnproto.rpctest.Test.TestGenerics.newFactory(Bar_d3b8766f80ae193b_Factory,Foo_d3b8766f80ae193b_Factory), 1, null, 0);
      }
      public final <Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Reader> void setRev(org.capnproto.SetPointerBuilder<org.capnproto.rpctest.Test.TestGenerics.Builder<Bar_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Builder>, org.capnproto.rpctest.Test.TestGenerics.Reader<Bar_d3b8766f80ae193b_Reader, Foo_d3b8766f80ae193b_Reader>> factory, org.capnproto.rpctest.Test.TestGenerics.Reader<Bar_d3b8766f80ae193b_Reader, Foo_d3b8766f80ae193b_Reader> value) {
        _setPointerField(factory, 1, value);
      }
      public final org.capnproto.rpctest.Test.TestGenerics.Builder<Bar_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Builder> initRev() {
        return _initPointerField(org.capnproto.rpctest.Test.TestGenerics.newFactory(Bar_d3b8766f80ae193b_Factory,Foo_d3b8766f80ae193b_Factory),1, 0);
      }
    }

    public static final class Reader<Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Reader> extends org.capnproto.StructReader {
      final org.capnproto.PointerFactory<?,Foo_d3b8766f80ae193b_Reader> Foo_d3b8766f80ae193b_Factory;
      final org.capnproto.PointerFactory<?,Bar_d3b8766f80ae193b_Reader> Bar_d3b8766f80ae193b_Factory;
      Reader(org.capnproto.PointerFactory<?,Foo_d3b8766f80ae193b_Reader> Foo_d3b8766f80ae193b_Factory,org.capnproto.PointerFactory<?,Bar_d3b8766f80ae193b_Reader> Bar_d3b8766f80ae193b_Factory,org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        this.Foo_d3b8766f80ae193b_Factory = Foo_d3b8766f80ae193b_Factory;
        this.Bar_d3b8766f80ae193b_Factory = Bar_d3b8766f80ae193b_Factory;
      }

      public boolean hasFoo() {
        return !_pointerFieldIsNull(0);
      }
      public Foo_d3b8766f80ae193b_Reader getFoo() {
        return _getPointerField(Foo_d3b8766f80ae193b_Factory, 0);
      }
      public boolean hasRev() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.rpctest.Test.TestGenerics.Reader<Bar_d3b8766f80ae193b_Reader, Foo_d3b8766f80ae193b_Reader> getRev() {
        return _getPointerField(org.capnproto.rpctest.Test.TestGenerics.newFactory(Bar_d3b8766f80ae193b_Factory,Foo_d3b8766f80ae193b_Factory),1,null, 0);
      }

    }

    public static class Interface<Foo_d3b8766f80ae193b, Bar_d3b8766f80ae193b, Qux_f941732eeda92ee8> {
      public static final class Factory<Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader, Qux_f941732eeda92ee8_Builder, Qux_f941732eeda92ee8_Reader>
          extends org.capnproto.Capability.Factory<Client> {
        final org.capnproto.PointerFactory<Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader> Foo_d3b8766f80ae193b_Factory;
        final org.capnproto.PointerFactory<Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader> Bar_d3b8766f80ae193b_Factory;
        final org.capnproto.PointerFactory<Qux_f941732eeda92ee8_Builder, Qux_f941732eeda92ee8_Reader> Qux_f941732eeda92ee8_Factory;
        public Factory(org.capnproto.PointerFactory<Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader> Foo_d3b8766f80ae193b_Factory, org.capnproto.PointerFactory<Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader> Bar_d3b8766f80ae193b_Factory, org.capnproto.PointerFactory<Qux_f941732eeda92ee8_Builder, Qux_f941732eeda92ee8_Reader> Qux_f941732eeda92ee8_Factory) {
          this.Foo_d3b8766f80ae193b_Factory = Foo_d3b8766f80ae193b_Factory;
          this.Bar_d3b8766f80ae193b_Factory = Bar_d3b8766f80ae193b_Factory;
          this.Qux_f941732eeda92ee8_Factory = Qux_f941732eeda92ee8_Factory;
        }
        public final Client newClient(org.capnproto.ClientHook hook) {
          return new Client(hook);
        }
      }

      public static <Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader, Qux_f941732eeda92ee8_Builder, Qux_f941732eeda92ee8_Reader>Factory<Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader, Qux_f941732eeda92ee8_Builder, Qux_f941732eeda92ee8_Reader> newFactory(org.capnproto.PointerFactory<Foo_d3b8766f80ae193b_Builder, Foo_d3b8766f80ae193b_Reader> Foo_d3b8766f80ae193b_Factory, org.capnproto.PointerFactory<Bar_d3b8766f80ae193b_Builder, Bar_d3b8766f80ae193b_Reader> Bar_d3b8766f80ae193b_Factory, org.capnproto.PointerFactory<Qux_f941732eeda92ee8_Builder, Qux_f941732eeda92ee8_Reader> Qux_f941732eeda92ee8_Factory) {
        return new Factory<>(Foo_d3b8766f80ae193b_Factory, Bar_d3b8766f80ae193b_Factory, Qux_f941732eeda92ee8_Factory);
      }

      public static class Client
          extends org.capnproto.Capability.Client {
        public Client() {}
        public Client(org.capnproto.ClientHook hook) { super(hook); }
        public Client(org.capnproto.Capability.Client cap) { super(cap); }
        public Client(Server server) { super(server); }
        public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
          super(promise);
        }
        public static final class Methods {
        }
      }
      public static abstract class Server
          extends org.capnproto.Capability.Server {
        protected org.capnproto.DispatchCallResult dispatchCall(
            long interfaceId, short methodId,
            org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
          if (interfaceId == 0xf941732eeda92ee8L) {
              return this.dispatchCallInternal(methodId, context);
          }
          else {
            return org.capnproto.Capability.Server.result(
              org.capnproto.Capability.Server.internalUnimplemented("Interface", interfaceId));
          }
        }
        private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
          switch (methodId) {
          default:
            return org.capnproto.Capability.Server.result(
              org.capnproto.Capability.Server.internalUnimplemented("Interface", 0xf941732eeda92ee8L, methodId));
          }
        }
        protected Client thisCap() { return new Client(super.thisCap()); }
      }
    }

    public interface Pipeline<Foo_d3b8766f80ae193b_Reader, Bar_d3b8766f80ae193b_Reader> extends org.capnproto.Pipeline {
    }
  }

public static final class Schemas {
public static final org.capnproto.SegmentReader b_f95ee2684d5d43b9 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b9\u0043\u005d\u004d\u0068\u00e2\u005e\u00f9" +
   "\u000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00a2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u00c7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0045" +
   "\u006e\u0075\u006d\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0020\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0059\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0039\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0061\u007a\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0075\u0078\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0075\u0075\u0078\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u0072\u0067\u0065\u0000\u0000\u0000" +
   "\u0067\u0072\u0061\u0075\u006c\u0074\u0000\u0000" +
   "\u0067\u0061\u0072\u0070\u006c\u0079\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8872f8b282c0feb9 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b9\u00fe\u00c0\u0082\u00b2\u00f8\u0072\u0088" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0006\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0014\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u0077\u0007\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0041" +
   "\u006c\u006c\u0054\u0079\u0070\u0065\u0073\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0088\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a9\u0003\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b4\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b1\u0003\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u0003\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b8\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u0003\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c0\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00cc\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c9\u0003\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c8\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d4\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d1\u0003\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d0\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00dc\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d9\u0003\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d8\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00e4\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u0000\u0000\u0009\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e1\u0003\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e0\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ec\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e9\u0003\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e8\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0009\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u0003\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f0\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00fc\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\n\u0000\u0000\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f9\u0003\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f8\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0004\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000b\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0004\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000c\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\r\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u001c\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000e\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0004\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0018\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0024\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000f\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0020\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u002c\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0010\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0004\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0011\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0004\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0030\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0012\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0004\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0064\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0013\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0013\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0004\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u007c\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0014\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0079\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0078\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0094\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0015\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0015\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0091\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0090\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0016\u0000\u0000\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0016\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a9\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0017\u0000\u0000\u0000\u0009\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c0\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00dc\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\n\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0018\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d9\u0004\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d8\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0019\u0000\u0000\u0000\u000b\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0019\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u0004\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f0\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u001a\u0000\u0000\u0000\u000c\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0005\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0024\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u001b\u0000\u0000\u0000\r\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001b\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0005\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0020\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u003c\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u001c\u0000\u0000\u0000\u000e\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001c\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0039\u0005\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0038\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u001d\u0000\u0000\u0000\u000f\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001d\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0005\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u006c\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u001e\u0000\u0000\u0000\u0010\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0005\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0068\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u001f\u0000\u0000\u0000\u0011\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0081\u0005\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0080\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u009c\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0020\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0020\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u0005\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0098\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b4\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0021\u0000\u0000\u0000\u0013\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0021\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b1\u0005\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00cc\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0076\u006f\u0069\u0064\u0046\u0069\u0065\u006c" +
   "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u006f\u006f\u006c\u0046\u0069\u0065\u006c" +
   "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0038\u0046\u0069\u0065\u006c" +
   "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0031\u0036\u0046\u0069\u0065" +
   "\u006c\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0033\u0032\u0046\u0069\u0065" +
   "\u006c\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0036\u0034\u0046\u0069\u0065" +
   "\u006c\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0049\u006e\u0074\u0038\u0046\u0069\u0065" +
   "\u006c\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0049\u006e\u0074\u0031\u0036\u0046\u0069" +
   "\u0065\u006c\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0049\u006e\u0074\u0033\u0032\u0046\u0069" +
   "\u0065\u006c\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0049\u006e\u0074\u0036\u0034\u0046\u0069" +
   "\u0065\u006c\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006c\u006f\u0061\u0074\u0033\u0032\u0046" +
   "\u0069\u0065\u006c\u0064\u0000\u0000\u0000\u0000" +
   "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006c\u006f\u0061\u0074\u0036\u0034\u0046" +
   "\u0069\u0065\u006c\u0064\u0000\u0000\u0000\u0000" +
   "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c" +
   "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c" +
   "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0072\u0075\u0063\u0074\u0046\u0069" +
   "\u0065\u006c\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u00fe\u00c0\u0082\u00b2\u00f8\u0072\u0088" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u006e\u0075\u006d\u0046\u0069\u0065\u006c" +
   "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u0043\u005d\u004d\u0068\u00e2\u005e\u00f9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063" +
   "\u0065\u0046\u0069\u0065\u006c\u0064\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u006f\u0069\u0064\u004c\u0069\u0073\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u006f\u006f\u006c\u004c\u0069\u0073\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0038\u004c\u0069\u0073\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0031\u0036\u004c\u0069\u0073" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0033\u0032\u004c\u0069\u0073" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0036\u0034\u004c\u0069\u0073" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0049\u006e\u0074\u0038\u004c\u0069\u0073" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0049\u006e\u0074\u0031\u0036\u004c\u0069" +
   "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0049\u006e\u0074\u0033\u0032\u004c\u0069" +
   "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0049\u006e\u0074\u0036\u0034\u004c\u0069" +
   "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006c\u006f\u0061\u0074\u0033\u0032\u004c" +
   "\u0069\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006c\u006f\u0061\u0074\u0036\u0034\u004c" +
   "\u0069\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0078\u0074\u004c\u0069\u0073\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0061\u0074\u0061\u004c\u0069\u0073\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0072\u0075\u0063\u0074\u004c\u0069" +
   "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u00fe\u00c0\u0082\u00b2\u00f8\u0072\u0088" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u006e\u0075\u006d\u004c\u0069\u0073\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u0043\u005d\u004d\u0068\u00e2\u005e\u00f9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063" +
   "\u0065\u004c\u0069\u0073\u0074\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d532eff13139d415 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0015\u00d4\u0039\u0031\u00f1\u00ef\u0032\u00d5" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0041" +
   "\u006e\u0079\u0050\u006f\u0069\u006e\u0074\u0065" +
   "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0061\u006e\u0079\u0050\u006f\u0069\u006e\u0074" +
   "\u0065\u0072\u0046\u0069\u0065\u006c\u0064\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_da7c14fd2b917fdb =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00db\u007f\u0091\u002b\u00fd\u0014\u007c\u00da" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ca\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0041" +
   "\u006e\u0079\u004f\u0074\u0068\u0065\u0072\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0054\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0060\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0061\u006e\u0079\u0053\u0074\u0072\u0075\u0063" +
   "\u0074\u0046\u0069\u0065\u006c\u0064\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u006e\u0079\u004c\u0069\u0073\u0074\u0046" +
   "\u0069\u0065\u006c\u0064\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u0070\u0061\u0062\u0069\u006c\u0069" +
   "\u0074\u0079\u0046\u0069\u0065\u006c\u0064\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c6a93c2ac7e0ef59 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0059\u00ef\u00e0\u00c7\u002a\u003c\u00a9\u00c6" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0009\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00ff\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004f" +
   "\u0075\u0074\u004f\u0066\u004f\u0072\u0064\u0065" +
   "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ed\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ec\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f5\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00fc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f9\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00fd\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0004\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00fc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0001\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0071\u0075\u0078\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0072\u0061\u0075\u006c\u0074\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u0072\u0067\u0065\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0077\u0061\u006c\u0064\u006f\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0075\u0075\u0078\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u0072\u0070\u006c\u0079\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0061\u007a\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_839575144ec2d9e4 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e4\u00d9\u00c2\u004e\u0014\u0075\u0095\u0083" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0055" +
   "\u006e\u006e\u0061\u006d\u0065\u0064\u0055\u006e" +
   "\u0069\u006f\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0081\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0088\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0085\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fe\u00ff\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0089\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0084\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0088\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0094\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0062\u0065\u0066\u006f\u0072\u0065\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0069\u0064\u0064\u006c\u0065\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0066\u0074\u0065\u0072\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e03ffdd7ef1ef6b3 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b3\u00f6\u001e\u00ef\u00d7\u00fd\u003f\u00e0" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0055" +
   "\u006e\u0069\u006f\u006e\u0049\u006e\u0055\u006e" +
   "\u0069\u006f\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0051\u00b7\u005f\u0015\u0010\u00f4\u0088" +
   "\r\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0075\u0074\u0065\u0072\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_88f410155fb7516c =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u006c\u0051\u00b7\u005f\u0015\u0010\u00f4\u0088" +
   "\u001c\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00b3\u00f6\u001e\u00ef\u00d7\u00fd\u003f\u00e0" +
   "\u0000\u0000\u0007\u0000\u0001\u0000\u0002\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0055" +
   "\u006e\u0069\u006f\u006e\u0049\u006e\u0055\u006e" +
   "\u0069\u006f\u006e\u002e\u006f\u0075\u0074\u0065" +
   "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0032\u00e4\u00b8\u0058\u0033\u004c\u00d8\u0096" +
   "\u0029\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u006e\u006e\u0065\u0072\u0000\u0000\u0000" +
   "\u0062\u0061\u007a\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_96d84c3358b8e432 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0032\u00e4\u00b8\u0058\u0033\u004c\u00d8\u0096" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u006c\u0051\u00b7\u005f\u0015\u0010\u00f4\u0088" +
   "\u0000\u0000\u0007\u0000\u0001\u0000\u0002\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0042\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0055" +
   "\u006e\u0069\u006f\u006e\u0049\u006e\u0055\u006e" +
   "\u0069\u006f\u006e\u002e\u006f\u0075\u0074\u0065" +
   "\u0072\u002e\u0069\u006e\u006e\u0065\u0072\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_deeb84fbd601ad83 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0083\u00ad\u0001\u00d6\u00fb\u0084\u00eb\u00de" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
   "\u0072\u006f\u0075\u0070\u0073\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u00ca\u001c\u00df\u001f\u002d\u0070\u00ac" +
   "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0072\u006f\u0075\u0070\u0073\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ac702d1fdf1cca1c =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u001c\u00ca\u001c\u00df\u001f\u002d\u0070\u00ac" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0083\u00ad\u0001\u00d6\u00fb\u0084\u00eb\u00de" +
   "\u0002\u0000\u0007\u0000\u0001\u0000\u0003\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
   "\u0072\u006f\u0075\u0070\u0073\u002e\u0067\u0072" +
   "\u006f\u0075\u0070\u0073\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u00e7\u0042\u00fc\u00cb\u0041\u00a7\u00f5" +
   "\u0045\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009d\u006f\u00e9\u00b5\u00b3\u00ff\u00d3\u00ab" +
   "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009e\u00e5\u0020\u0069\u0099\u0047\u004a\u00ec" +
   "\u0015\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0061\u007a\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f5a741cbfc42e73d =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u003d\u00e7\u0042\u00fc\u00cb\u0041\u00a7\u00f5" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u001c\u00ca\u001c\u00df\u001f\u002d\u0070\u00ac" +
   "\u0002\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
   "\u0072\u006f\u0075\u0070\u0073\u002e\u0067\u0072" +
   "\u006f\u0075\u0070\u0073\u002e\u0066\u006f\u006f" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u006f\u0072\u0067\u0065\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0072\u0061\u0075\u006c\u0074\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u0072\u0070\u006c\u0079\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_abd3ffb3b5e96f9d =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u009d\u006f\u00e9\u00b5\u00b3\u00ff\u00d3\u00ab" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u001c\u00ca\u001c\u00df\u001f\u002d\u0070\u00ac" +
   "\u0002\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
   "\u0072\u006f\u0075\u0070\u0073\u002e\u0067\u0072" +
   "\u006f\u0075\u0070\u0073\u002e\u0062\u0061\u007a" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u006f\u0072\u0067\u0065\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0072\u0061\u0075\u006c\u0074\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u0072\u0070\u006c\u0079\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ec4a47996920e59e =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u009e\u00e5\u0020\u0069\u0099\u0047\u004a\u00ec" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u001c\u00ca\u001c\u00df\u001f\u002d\u0070\u00ac" +
   "\u0002\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
   "\u0072\u006f\u0075\u0070\u0073\u002e\u0067\u0072" +
   "\u006f\u0075\u0070\u0073\u002e\u0062\u0061\u0072" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u006f\u0072\u0067\u0065\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0072\u0061\u0075\u006c\u0074\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0061\u0072\u0070\u006c\u0079\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9f2ea0bc78a41ee7 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e7\u001e\u00a4\u0078\u00bc\u00a0\u002e\u009f" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ca\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0053" +
   "\u0074\u0075\u0072\u0064\u0079\u0052\u0065\u0066" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0068\u006f\u0073\u0074\u0049\u0064\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u008a\u005e\u0023\u0073\u00b0\u0024\u00b0" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0062\u006a\u0065\u0063\u0074\u0049\u0064" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b024b073235e8ab9 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b9\u008a\u005e\u0023\u0073\u00b0\u0024\u00b0" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00fa\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0053" +
   "\u0074\u0075\u0072\u0064\u0079\u0052\u0065\u0066" +
   "\u0048\u006f\u0073\u0074\u0049\u0064\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0068\u006f\u0073\u0074\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_fe9b618a1b572f6e =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u006e\u002f\u0057\u001b\u008a\u0061\u009b\u00fe" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0053" +
   "\u0074\u0075\u0072\u0064\u0079\u0052\u0065\u0066" +
   "\u004f\u0062\u006a\u0065\u0063\u0074\u0049\u0064" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00ec\u002f\u0000\u0072\u0030\u00b2\u00c9\u00aa" +
   "\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0054\u0061\u0067\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0067\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ec\u002f\u0000\u0072\u0030\u00b2\u00c9\u00aa" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_aac9b23072002fec =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ec\u002f\u0000\u0072\u0030\u00b2\u00c9\u00aa" +
   "\u0021\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u006e\u002f\u0057\u001b\u008a\u0061\u009b\u00fe" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0097\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0053" +
   "\u0074\u0075\u0072\u0064\u0079\u0052\u0065\u0066" +
   "\u004f\u0062\u006a\u0065\u0063\u0074\u0049\u0064" +
   "\u002e\u0054\u0061\u0067\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0039\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0035\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u0049\u006e\u0074\u0065" +
   "\u0072\u0066\u0061\u0063\u0065\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u0045\u0078\u0074\u0065" +
   "\u006e\u0064\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u0050\u0069\u0070\u0065" +
   "\u006c\u0069\u006e\u0065\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u0054\u0061\u0069\u006c" +
   "\u0043\u0061\u006c\u006c\u0065\u0065\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u0054\u0061\u0069\u006c" +
   "\u0043\u0061\u006c\u006c\u0065\u0072\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u004d\u006f\u0072\u0065" +
   "\u0053\u0074\u0075\u0066\u0066\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d1f042920a134170 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0070\u0041\u0013\n\u0092\u0042\u00f0\u00d1" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0050" +
   "\u0072\u006f\u0076\u0069\u0073\u0069\u006f\u006e" +
   "\u0049\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_f2af4492f6af6f3c =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u003c\u006f\u00af\u00f6\u0092\u0044\u00af\u00f2" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0052" +
   "\u0065\u0063\u0069\u0070\u0069\u0065\u006e\u0074" +
   "\u0049\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_a497ca0ee2b3f6d0 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d0\u00f6\u00b3\u00e2\u000e\u00ca\u0097\u00a4" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00fa\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0054" +
   "\u0068\u0069\u0072\u0064\u0050\u0061\u0072\u0074" +
   "\u0079\u0043\u0061\u0070\u0049\u0064\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_d34dafaaed9490c7 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00c7\u0090\u0094\u00ed\u00aa\u00af\u004d\u00d3" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004a" +
   "\u006f\u0069\u006e\u0052\u0065\u0073\u0075\u006c" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_eabb7f3581f9ca3f =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u000b\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ca\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00c7\u0000\u0000\u0000" +
   "\u0095\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0049" +
   "\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0020\u0044\u0010\u0070\u0065\u0024\u006a\u0098" +
   "\u007f\u001b\u0014\u0013\u0072\u0062\u0087\u00a5" +
   "\u0051\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b5\u00d7\u008d\u000e\u006e\u0090\u0026\u00c7" +
   "\u00b1\u001c\u0021\u0026\u0029\u002f\u0031\u00c2" +
   "\u0039\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d4\u00d5\u00c3\u00d5\u00cd\u002d\u0086\u00b4" +
   "\u0087\u002d\u0014\u001e\u0031\u0000\u0096\u00b2" +
   "\u0021\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0062\u0061\u007a\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_986a246570104420 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0020\u0044\u0010\u0070\u0065\u0024\u006a\u0098" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\"\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0049" +
   "\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065" +
   "\u002e\u0066\u006f\u006f\u0024\u0050\u0061\u0072" +
   "\u0061\u006d\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0020\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006a\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a587627213141b7f =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u007f\u001b\u0014\u0013\u0072\u0062\u0087\u00a5" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0049" +
   "\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065" +
   "\u002e\u0066\u006f\u006f\u0024\u0052\u0065\u0073" +
   "\u0075\u006c\u0074\u0073\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c726906e0e8dd7b5 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b5\u00d7\u008d\u000e\u006e\u0090\u0026\u00c7" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\"\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0049" +
   "\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065" +
   "\u002e\u0062\u0061\u0072\u0024\u0050\u0061\u0072" +
   "\u0061\u006d\u0073\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c2312f2926211cb1 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b1\u001c\u0021\u0026\u0029\u002f\u0031\u00c2" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0049" +
   "\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065" +
   "\u002e\u0062\u0061\u0072\u0024\u0052\u0065\u0073" +
   "\u0075\u006c\u0074\u0073\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b4862dcdd5c3d5d4 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d4\u00d5\u00c3\u00d5\u00cd\u002d\u0086\u00b4" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\"\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0049" +
   "\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065" +
   "\u002e\u0062\u0061\u007a\u0024\u0050\u0061\u0072" +
   "\u0061\u006d\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u00fe\u00c0\u0082\u00b2\u00f8\u0072\u0088" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b29600311e142d87 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0087\u002d\u0014\u001e\u0031\u0000\u0096\u00b2" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0049" +
   "\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065" +
   "\u002e\u0062\u0061\u007a\u0024\u0052\u0065\u0073" +
   "\u0075\u006c\u0074\u0073\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_83b7a84e11b83fbd =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00bd\u003f\u00b8\u0011\u004e\u00a8\u00b7\u0083" +
   "\u000b\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ba\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u00c7\u0000\u0000\u0000" +
   "\u0091\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0045" +
   "\u0078\u0074\u0065\u006e\u0064\u0073\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ba\u00e8\u006c\u00dc\u0052\u0087\u00d1\u00b6" +
   "\u0021\u0001\u0087\u007a\u0076\u0094\u00ac\u0090" +
   "\u0051\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u00fe\u00c0\u0082\u00b2\u00f8\u0072\u0088" +
   "\u003f\u0044\u009c\u0006\u00f6\u00db\u00a2\u00d1" +
   "\u0039\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u00d7\u0052\u0078\u0093\u007f\u00a9\u00cb" +
   "\u00b9\u00fe\u00c0\u0082\u00b2\u00f8\u0072\u0088" +
   "\u0021\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0071\u0075\u0078\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0063\u006f\u0072\u0067\u0065\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0067\u0072\u0061\u0075\u006c\u0074\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b6d18752dc6ce8ba =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ba\u00e8\u006c\u00dc\u0052\u0087\u00d1\u00b6" +
   "\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0045" +
   "\u0078\u0074\u0065\u006e\u0064\u0073\u002e\u0071" +
   "\u0075\u0078\u0024\u0050\u0061\u0072\u0061\u006d" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_90ac94767a870121 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0021\u0001\u0087\u007a\u0076\u0094\u00ac\u0090" +
   "\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u001a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0045" +
   "\u0078\u0074\u0065\u006e\u0064\u0073\u002e\u0071" +
   "\u0075\u0078\u0024\u0052\u0065\u0073\u0075\u006c" +
   "\u0074\u0073\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d1a2dbf6069c443f =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u003f\u0044\u009c\u0006\u00f6\u00db\u00a2\u00d1" +
   "\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0045" +
   "\u0078\u0074\u0065\u006e\u0064\u0073\u002e\u0063" +
   "\u006f\u0072\u0067\u0065\u0024\u0052\u0065\u0073" +
   "\u0075\u006c\u0074\u0073\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_cba97f937852d703 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0003\u00d7\u0052\u0078\u0093\u007f\u00a9\u00cb" +
   "\u0017\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0045" +
   "\u0078\u0074\u0065\u006e\u0064\u0073\u002e\u0067" +
   "\u0072\u0061\u0075\u006c\u0074\u0024\u0050\u0061" +
   "\u0072\u0061\u006d\u0073\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c0fe8dafeba21cc7 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00c7\u001c\u00a2\u00eb\u00af\u008d\u00fe\u00c0" +
   "\u000b\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0045" +
   "\u0078\u0074\u0065\u006e\u0064\u0073\u0032\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00bd\u003f\u00b8\u0011\u004e\u00a8\u00b7\u0083" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_87a04ceaa2fec4f5 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f5\u00c4\u00fe\u00a2\u00ea\u004c\u00a0\u0087" +
   "\u000b\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u00c7\u0000\u0000\u0000" +
   "\u00b1\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0050" +
   "\u0069\u0070\u0065\u006c\u0069\u006e\u0065\u0000" +
   "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0017\u005a\u00bb\u0035\u00e8\u005e\u005d\u008f" +
   "\u0009\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u00e0\u0044\u0021\u00a0\u00da\u0040\u0065\u008a" +
   "\u0005\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0042\u006f\u0078\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u006e\u0079\u0042\u006f\u0078\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a4\u00a9\u0012\u00d3\u00d6\u004e\u0088\u00ca" +
   "\u002c\u00cb\u00a5\u0074\u00d9\u00d2\u00f8\u00ab" +
   "\u0051\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c9\u0035\u00e2\u0086\"\u0065\u0080\u00b2" +
   "\u0014\u0049\u0001\u0048\u00be\u00c3\u00ce\u00af" +
   "\u0039\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0091\u00b8\u00e3\u00cb\u008a\u006c\u00ad\u00e4" +
   "\u0088\u00a1\u00a8\u008f\u00a5\u0077\u0067\u00a7" +
   "\u0025\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0067\u0065\u0074\u0043\u0061\u0070\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0074\u0065\u0073\u0074\u0050\u006f\u0069\u006e" +
   "\u0074\u0065\u0072\u0073\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0067\u0065\u0074\u0041\u006e\u0079\u0043\u0061" +
   "\u0070\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_8f5d5ee835bb5a17 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0017\u005a\u00bb\u0035\u00e8\u005e\u005d\u008f" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00f5\u00c4\u00fe\u00a2\u00ea\u004c\u00a0\u0087" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0050" +
   "\u0069\u0070\u0065\u006c\u0069\u006e\u0065\u002e" +
   "\u0042\u006f\u0078\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8a6540daa02144e0 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e0\u0044\u0021\u00a0\u00da\u0040\u0065\u008a" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00f5\u00c4\u00fe\u00a2\u00ea\u004c\u00a0\u0087" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00fa\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0050" +
   "\u0069\u0070\u0065\u006c\u0069\u006e\u0065\u002e" +
   "\u0041\u006e\u0079\u0042\u006f\u0078\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ca884ed6d312a9a4 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a4\u00a9\u0012\u00d3\u00d6\u004e\u0088\u00ca" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0032\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0050" +
   "\u0069\u0070\u0065\u006c\u0069\u006e\u0065\u002e" +
   "\u0067\u0065\u0074\u0043\u0061\u0070\u0024\u0050" +
   "\u0061\u0072\u0061\u006d\u0073\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0043\u0061\u0070\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_abf8d2d974a5cb2c =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u002c\u00cb\u00a5\u0074\u00d9\u00d2\u00f8\u00ab" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u003a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0050" +
   "\u0069\u0070\u0065\u006c\u0069\u006e\u0065\u002e" +
   "\u0067\u0065\u0074\u0043\u0061\u0070\u0024\u0052" +
   "\u0065\u0073\u0075\u006c\u0074\u0073\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0075\u0074\u0042\u006f\u0078\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0017\u005a\u00bb\u0035\u00e8\u005e\u005d\u008f" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b280652286e235c9 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00c9\u0035\u00e2\u0086\"\u0065\u0080\u00b2" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0062\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0050" +
   "\u0069\u0070\u0065\u006c\u0069\u006e\u0065\u002e" +
   "\u0074\u0065\u0073\u0074\u0050\u006f\u0069\u006e" +
   "\u0074\u0065\u0072\u0073\u0024\u0050\u0061\u0072" +
   "\u0061\u006d\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0064\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0062\u006a\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0069\u0073\u0074\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_afcec3be48014914 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0014\u0049\u0001\u0048\u00be\u00c3\u00ce\u00af" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u006a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0050" +
   "\u0069\u0070\u0065\u006c\u0069\u006e\u0065\u002e" +
   "\u0074\u0065\u0073\u0074\u0050\u006f\u0069\u006e" +
   "\u0074\u0065\u0072\u0073\u0024\u0052\u0065\u0073" +
   "\u0075\u006c\u0074\u0073\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e4ad6c8acbe3b891 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0091\u00b8\u00e3\u00cb\u008a\u006c\u00ad\u00e4" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0050" +
   "\u0069\u0070\u0065\u006c\u0069\u006e\u0065\u002e" +
   "\u0067\u0065\u0074\u0041\u006e\u0079\u0043\u0061" +
   "\u0070\u0024\u0050\u0061\u0072\u0061\u006d\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0043\u0061\u0070\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a76777a58fa8a188 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0088\u00a1\u00a8\u008f\u00a5\u0077\u0067\u00a7" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0050" +
   "\u0069\u0070\u0065\u006c\u0069\u006e\u0065\u002e" +
   "\u0067\u0065\u0074\u0041\u006e\u0079\u0043\u0061" +
   "\u0070\u0024\u0052\u0065\u0073\u0075\u006c\u0074" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0075\u0074\u0042\u006f\u0078\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e0\u0044\u0021\u00a0\u00da\u0040\u0065\u008a" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d3227aa40b221f5c =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\\\u001f\"\u000b\u00a4\u007a\"\u00d3" +
   "\u000b\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ca\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0047\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
   "\u0061\u006c\u006c\u004f\u0072\u0064\u0065\u0072" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009a\u00c6\u0025\u009a\u0095\u00d3\u00db\u00f3" +
   "\u00f3\u0059\n\u00a3\u009a\u0011\u008b\u00a6" +
   "\u0011\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0067\u0065\u0074\u0043\u0061\u006c\u006c\u0053" +
   "\u0065\u0071\u0075\u0065\u006e\u0063\u0065\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_f3dbd3959a25c69a =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u009a\u00c6\u0025\u009a\u0095\u00d3\u00db\u00f3" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0082\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
   "\u0061\u006c\u006c\u004f\u0072\u0064\u0065\u0072" +
   "\u002e\u0067\u0065\u0074\u0043\u0061\u006c\u006c" +
   "\u0053\u0065\u0071\u0075\u0065\u006e\u0063\u0065" +
   "\u0024\u0050\u0061\u0072\u0061\u006d\u0073\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a68b119aa30a59f3 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f3\u0059\n\u00a3\u009a\u0011\u008b\u00a6" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u008a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
   "\u0061\u006c\u006c\u004f\u0072\u0064\u0065\u0072" +
   "\u002e\u0067\u0065\u0074\u0043\u0061\u006c\u006c" +
   "\u0053\u0065\u0071\u0075\u0065\u006e\u0063\u0065" +
   "\u0024\u0052\u0065\u0073\u0075\u006c\u0074\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b3c49c6a6be904e6 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e6\u0004\u00e9\u006b\u006a\u009c\u00c4\u00b3" +
   "\u000b\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0047\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0054" +
   "\u0061\u0069\u006c\u0043\u0061\u006c\u006c\u0065" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0026\u0082\u004b\u006b\u00fd\u0028\u00ae\u00f8" +
   "\u0001\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0054\u0061\u0069\u006c\u0052\u0065\u0073\u0075" +
   "\u006c\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bf\u00bf\u004a\u0048\u0004\u0058\u005e\u00a3" +
   "\u0026\u0082\u004b\u006b\u00fd\u0028\u00ae\u00f8" +
   "\u0011\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_f8ae28fd6b4b8226 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0026\u0082\u004b\u006b\u00fd\u0028\u00ae\u00f8" +
   "\u001a\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e6\u0004\u00e9\u006b\u006a\u009c\u00c4\u00b3" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0054" +
   "\u0061\u0069\u006c\u0043\u0061\u006c\u006c\u0065" +
   "\u0065\u002e\u0054\u0061\u0069\u006c\u0052\u0065" +
   "\u0073\u0075\u006c\u0074\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\\\u001f\"\u000b\u00a4\u007a\"\u00d3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a35e5804484abfbf =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00bf\u00bf\u004a\u0048\u0004\u0058\u005e\u00a3" +
   "\u001a\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0054" +
   "\u0061\u0069\u006c\u0043\u0061\u006c\u006c\u0065" +
   "\u0065\u002e\u0066\u006f\u006f\u0024\u0050\u0061" +
   "\u0072\u0061\u006d\u0073\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a0f5f4f5d2cf0acf =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00cf\n\u00cf\u00d2\u00f5\u00f4\u00f5\u00a0" +
   "\u000b\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0047\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0054" +
   "\u0061\u0069\u006c\u0043\u0061\u006c\u006c\u0065" +
   "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00fa\u00cd\u0097\u00ed\u00e5\u0057\u003b\u00b8" +
   "\u0026\u0082\u004b\u006b\u00fd\u0028\u00ae\u00f8" +
   "\u0011\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_b83b57e5ed97cdfa =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00fa\u00cd\u0097\u00ed\u00e5\u0057\u003b\u00b8" +
   "\u001a\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0054" +
   "\u0061\u0069\u006c\u0043\u0061\u006c\u006c\u0065" +
   "\u0072\u002e\u0066\u006f\u006f\u0024\u0050\u0061" +
   "\u0072\u0061\u006d\u0073\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u006c\u006c\u0065\u0065\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e6\u0004\u00e9\u006b\u006a\u009c\u00c4\u00b3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d97ab79dc9a31ee1 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e1\u001e\u00a3\u00c9\u009d\u00b7\u007a\u00d9" +
   "\u000b\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ca\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00c7\u0000\u0000\u0000" +
   "\u00a1\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0053" +
   "\u0074\u0072\u0065\u0061\u006d\u0069\u006e\u0067" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0078\u0052\u00c0\u00c7\u00ec\u0062\u0081\u00ae" +
   "\u006e\u00b1\u00c0\u0077\u0033\u009a\u005f\u0099" +
   "\u0051\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0078\u00b0\u004a\u0069\u00fb\u00a7\u00d6\u00ea" +
   "\u006e\u00b1\u00c0\u0077\u0033\u009a\u005f\u0099" +
   "\u003d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0035\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b4\u00d8\u0083\u0068\u000c\u00fd\u0071\u00f6" +
   "\u0090\u00fa\u00bc\u0029\u00e5\u0071\u007f\u00dd" +
   "\u0029\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0064\u006f\u0053\u0074\u0072\u0065\u0061\u006d" +
   "\u0049\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0064\u006f\u0053\u0074\u0072\u0065\u0061\u006d" +
   "\u004a\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0066\u0069\u006e\u0069\u0073\u0068\u0053\u0074" +
   "\u0072\u0065\u0061\u006d\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_ae8162ecc7c05278 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0078\u0052\u00c0\u00c7\u00ec\u0062\u0081\u00ae" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0053" +
   "\u0074\u0072\u0065\u0061\u006d\u0069\u006e\u0067" +
   "\u002e\u0064\u006f\u0053\u0074\u0072\u0065\u0061" +
   "\u006d\u0049\u0024\u0050\u0061\u0072\u0061\u006d" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ead6a7fb694ab078 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0078\u00b0\u004a\u0069\u00fb\u00a7\u00d6\u00ea" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0053" +
   "\u0074\u0072\u0065\u0061\u006d\u0069\u006e\u0067" +
   "\u002e\u0064\u006f\u0053\u0074\u0072\u0065\u0061" +
   "\u006d\u004a\u0024\u0050\u0061\u0072\u0061\u006d" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006a\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f671fd0c6883d8b4 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b4\u00d8\u0083\u0068\u000c\u00fd\u0071\u00f6" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u006a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0053" +
   "\u0074\u0072\u0065\u0061\u006d\u0069\u006e\u0067" +
   "\u002e\u0066\u0069\u006e\u0069\u0073\u0068\u0053" +
   "\u0074\u0072\u0065\u0061\u006d\u0024\u0050\u0061" +
   "\u0072\u0061\u006d\u0073\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_dd7f71e529bcfa90 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0090\u00fa\u00bc\u0029\u00e5\u0071\u007f\u00dd" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0072\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0053" +
   "\u0074\u0072\u0065\u0061\u006d\u0069\u006e\u0067" +
   "\u002e\u0066\u0069\u006e\u0069\u0073\u0068\u0053" +
   "\u0074\u0072\u0065\u0061\u006d\u0024\u0052\u0065" +
   "\u0073\u0075\u006c\u0074\u0073\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u006f\u0074\u0061\u006c\u0049\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u006f\u0074\u0061\u006c\u004a\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ecb58d5143a416cb =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00cb\u0016\u00a4\u0043\u0051\u008d\u00b5\u00ec" +
   "\u000b\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0048" +
   "\u0061\u006e\u0064\u006c\u0065\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
public static final org.capnproto.SegmentReader b_a4baf342da0369df =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00df\u0069\u0003\u00da\u0042\u00f3\u00ba\u00a4" +
   "\u000b\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ca\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0087\u0003\u0000\u0000" +
   "\u0081\u0002\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0094\u00b0\u007e\u0038\u0058\u0036\u00c3" +
   "\u00af\u0089\u00ac\u001b\u0094\u000e\u00d1\u0086" +
   "\u00b1\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a5\u0001\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bc\u00de\u0025\u00a8\u004f\u008a\u0031\u008f" +
   "\u00c8\u00ae\u00eb\u0044\u0006\u005f\u004b\u00cc" +
   "\u0099\u0001\u0000\u0000\u00a2\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0095\u0001\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006b\u0069\u00cd\u00d8\u00bf\u0096\u00e2" +
   "\u00a2\u001d\u0030\u0099\u0066\u00fe\u002f\u00ad" +
   "\u0089\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0081\u0001\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f3\u001f\u005d\u0091\u00ba\u00a3\u00cc\u00b9" +
   "\u006e\u0081\n\u0059\u0029\u008c\u0023\u00ec" +
   "\u0075\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0001\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0046\u009c\u0013\u0090\u005f\u008c\u009c" +
   "\u003b\u00a0\u0024\u008f\u0095\u00e3\r\u00a5" +
   "\u005d\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0001\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0036\u00be\u0092\u002f\u000f\u003f\u0023\u0087" +
   "\u0047\u0003\u00a9\u00f6\u002c\u0080\u002c\u00fe" +
   "\u0049\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0001\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009f\u00a7\u0074\u002a\u0082\u000f\u00d1\u00c5" +
   "\u0038\u00cc\u00b0\u003b\u007a\u0081\u0030\u0082" +
   "\u0031\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0001\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00cc\u006a\n\u00ae\u005f\u00c8\u0030\u00fb" +
   "\u001a\u00bd\u00b0\u001f\u0021\u0042\u0003\u00d1" +
   "\u0019\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0001\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a6\u0008\u0044\u0037\u0023\u005a\u0027\u00da" +
   "\u00ba\u001c\u000f\u00ed\u0014\u0078\u000b\u00ef" +
   "\u0005\u0001\u0000\u0000\u009a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0001\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0034\u00c1\u0047\u0007\u0090\u0015\u0060\u0094" +
   "\u00b2\u0029\u0033\u009b\u0082\u0028\u00d2\u00a1" +
   "\u00f5\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ed\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u00fb\u0052\u001b\u00ce\u00a2\u00a3\u00d6" +
   "\u004d\u0081\u00f7\u00d9\u00a7\u0071\u004b\u0098" +
   "\u00e1\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d5\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0037\u0014\u0065\u003d\u0080\u0017\u0095" +
   "\u003e\u00ab\u00c2\u0098\u00b2\u004f\u00de\u00c8" +
   "\u00c9\u0000\u0000\u0000\u0092\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c5\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00de\u0010\u00fe\u00cd\u00df\u00c4\u0054\u008e" +
   "\u003b\u00c7\u00b8\u005a\u0043\u005a\u009b\u00ba" +
   "\u00b9\u0000\u0000\u0000\u00b2\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b5\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ff\u00a0\u00dc\u00bf\u0090\u00e8\u0039\u00eb" +
   "\u0070\u00f1\u0096\u00b6\u00f4\u0078\u0076\u00f0" +
   "\u00a9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0063\u0061\u006c\u006c\u0046\u006f\u006f\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0063\u0061\u006c\u006c\u0046\u006f\u006f\u0057" +
   "\u0068\u0065\u006e\u0052\u0065\u0073\u006f\u006c" +
   "\u0076\u0065\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u006e\u0065\u0076\u0065\u0072\u0052\u0065\u0074" +
   "\u0075\u0072\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0068\u006f\u006c\u0064\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0063\u0061\u006c\u006c\u0048\u0065\u006c\u0064" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0067\u0065\u0074\u0048\u0065\u006c\u0064\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0065\u0063\u0068\u006f\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0065\u0078\u0070\u0065\u0063\u0074\u0043\u0061" +
   "\u006e\u0063\u0065\u006c\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u006d\u0065\u0074\u0068\u006f\u0064\u0057\u0069" +
   "\u0074\u0068\u0044\u0065\u0066\u0061\u0075\u006c" +
   "\u0074\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0067\u0065\u0074\u0048\u0061\u006e\u0064\u006c" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0067\u0065\u0074\u004e\u0075\u006c\u006c\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0067\u0065\u0074\u0045\u006e\u006f\u0072\u006d" +
   "\u006f\u0075\u0073\u0053\u0074\u0072\u0069\u006e" +
   "\u0067\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u006d\u0065\u0074\u0068\u006f\u0064\u0057\u0069" +
   "\u0074\u0068\u004e\u0075\u006c\u006c\u0044\u0065" +
   "\u0066\u0061\u0075\u006c\u0074\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0077\u0072\u0069\u0074\u0065\u0054\u006f\u0046" +
   "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\\\u001f\"\u000b\u00a4\u007a\"\u00d3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c33658387eb09415 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0015\u0094\u00b0\u007e\u0038\u0058\u0036\u00c3" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0042\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0063\u0061\u006c\u006c\u0046\u006f\u006f" +
   "\u0024\u0050\u0061\u0072\u0061\u006d\u0073\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_86d10e941bac89af =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00af\u0089\u00ac\u001b\u0094\u000e\u00d1\u0086" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0063\u0061\u006c\u006c\u0046\u006f\u006f" +
   "\u0024\u0052\u0065\u0073\u0075\u006c\u0074\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8f318a4fa825debc =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00bc\u00de\u0025\u00a8\u004f\u008a\u0031\u008f" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00a2\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0063\u0061\u006c\u006c\u0046\u006f\u006f" +
   "\u0057\u0068\u0065\u006e\u0052\u0065\u0073\u006f" +
   "\u006c\u0076\u0065\u0064\u0024\u0050\u0061\u0072" +
   "\u0061\u006d\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_cc4b5f0644ebaec8 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00c8\u00ae\u00eb\u0044\u0006\u005f\u004b\u00cc" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00aa\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0063\u0061\u006c\u006c\u0046\u006f\u006f" +
   "\u0057\u0068\u0065\u006e\u0052\u0065\u0073\u006f" +
   "\u006c\u0076\u0065\u0064\u0024\u0052\u0065\u0073" +
   "\u0075\u006c\u0074\u0073\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e296bfd8cd696b63 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0063\u006b\u0069\u00cd\u00d8\u00bf\u0096\u00e2" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0062\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u006e\u0065\u0076\u0065\u0072\u0052\u0065" +
   "\u0074\u0075\u0072\u006e\u0024\u0050\u0061\u0072" +
   "\u0061\u006d\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ad2ffe6699301da2 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a2\u001d\u0030\u0099\u0066\u00fe\u002f\u00ad" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u006a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u006e\u0065\u0076\u0065\u0072\u0052\u0065" +
   "\u0074\u0075\u0072\u006e\u0024\u0052\u0065\u0073" +
   "\u0075\u006c\u0074\u0073\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0061\u0070\u0043\u006f\u0070\u0079\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b9cca3ba915d1ff3 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f3\u001f\u005d\u0091\u00ba\u00a3\u00cc\u00b9" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0068\u006f\u006c\u0064\u0024\u0050\u0061" +
   "\u0072\u0061\u006d\u0073\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ec238c29590a816e =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u006e\u0081\n\u0059\u0029\u008c\u0023\u00ec" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0032\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0068\u006f\u006c\u0064\u0024\u0052\u0065" +
   "\u0073\u0075\u006c\u0074\u0073\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9c8c5f90139c4671 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0071\u0046\u009c\u0013\u0090\u005f\u008c\u009c" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0063\u0061\u006c\u006c\u0048\u0065\u006c" +
   "\u0064\u0024\u0050\u0061\u0072\u0061\u006d\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a50de3958f24a03b =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u003b\u00a0\u0024\u008f\u0095\u00e3\r\u00a5" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0063\u0061\u006c\u006c\u0048\u0065\u006c" +
   "\u0064\u0024\u0052\u0065\u0073\u0075\u006c\u0074" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_87233f0f2f92be36 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0036\u00be\u0092\u002f\u000f\u003f\u0023\u0087" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0042\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0067\u0065\u0074\u0048\u0065\u006c\u0064" +
   "\u0024\u0050\u0061\u0072\u0061\u006d\u0073\u0000" + "");
public static final org.capnproto.SegmentReader b_fe2c802cf6a90347 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0047\u0003\u00a9\u00f6\u002c\u0080\u002c\u00fe" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0067\u0065\u0074\u0048\u0065\u006c\u0064" +
   "\u0024\u0052\u0065\u0073\u0075\u006c\u0074\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c5d10f822a74a79f =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u009f\u00a7\u0074\u002a\u0082\u000f\u00d1\u00c5" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0065\u0063\u0068\u006f\u0024\u0050\u0061" +
   "\u0072\u0061\u006d\u0073\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\\\u001f\"\u000b\u00a4\u007a\"\u00d3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8230817a3bb0cc38 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0038\u00cc\u00b0\u003b\u007a\u0081\u0030\u0082" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0032\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0065\u0063\u0068\u006f\u0024\u0052\u0065" +
   "\u0073\u0075\u006c\u0074\u0073\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\\\u001f\"\u000b\u00a4\u007a\"\u00d3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_fb30c85fae0a6acc =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00cc\u006a\n\u00ae\u005f\u00c8\u0030\u00fb" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u006a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0065\u0078\u0070\u0065\u0063\u0074\u0043" +
   "\u0061\u006e\u0063\u0065\u006c\u0024\u0050\u0061" +
   "\u0072\u0061\u006d\u0073\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d10342211fb0bd1a =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u001a\u00bd\u00b0\u001f\u0021\u0042\u0003\u00d1" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0072\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0065\u0078\u0070\u0065\u0063\u0074\u0043" +
   "\u0061\u006e\u0063\u0065\u006c\u0024\u0052\u0065" +
   "\u0073\u0075\u006c\u0074\u0073\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_da275a23374408a6 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a6\u0008\u0044\u0037\u0023\u005a\u0027\u00da" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u009a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u006d\u0065\u0074\u0068\u006f\u0064\u0057" +
   "\u0069\u0074\u0068\u0044\u0065\u0066\u0061\u0075" +
   "\u006c\u0074\u0073\u0024\u0050\u0061\u0072\u0061" +
   "\u006d\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0061\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u007b\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ef0b7814ed0f1cba =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ba\u001c\u000f\u00ed\u0014\u0078\u000b\u00ef" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00a2\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u006d\u0065\u0074\u0068\u006f\u0064\u0057" +
   "\u0069\u0074\u0068\u0044\u0065\u0066\u0061\u0075" +
   "\u006c\u0074\u0073\u0024\u0052\u0065\u0073\u0075" +
   "\u006c\u0074\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_946015900747c134 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0034\u00c1\u0047\u0007\u0090\u0015\u0060\u0094" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0067\u0065\u0074\u0048\u0061\u006e\u0064" +
   "\u006c\u0065\u0024\u0050\u0061\u0072\u0061\u006d" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a1d228829b3329b2 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b2\u0029\u0033\u009b\u0082\u0028\u00d2\u00a1" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u005a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0067\u0065\u0074\u0048\u0061\u006e\u0064" +
   "\u006c\u0065\u0024\u0052\u0065\u0073\u0075\u006c" +
   "\u0074\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0068\u0061\u006e\u0064\u006c\u0065\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00cb\u0016\u00a4\u0043\u0051\u008d\u00b5\u00ec" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d6a3a2ce1b52fb44 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0044\u00fb\u0052\u001b\u00ce\u00a2\u00a3\u00d6" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0042\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0067\u0065\u0074\u004e\u0075\u006c\u006c" +
   "\u0024\u0050\u0061\u0072\u0061\u006d\u0073\u0000" + "");
public static final org.capnproto.SegmentReader b_984b71a7d9f7814d =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u004d\u0081\u00f7\u00d9\u00a7\u0071\u004b\u0098" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0067\u0065\u0074\u004e\u0075\u006c\u006c" +
   "\u0024\u0052\u0065\u0073\u0075\u006c\u0074\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0075\u006c\u006c\u0043\u0061\u0070\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00df\u0069\u0003\u00da\u0042\u00f3\u00ba\u00a4" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9517803d65143748 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0048\u0037\u0014\u0065\u003d\u0080\u0017\u0095" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0092\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0067\u0065\u0074\u0045\u006e\u006f\u0072" +
   "\u006d\u006f\u0075\u0073\u0053\u0074\u0072\u0069" +
   "\u006e\u0067\u0024\u0050\u0061\u0072\u0061\u006d" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c8de4fb298c2ab3e =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u003e\u00ab\u00c2\u0098\u00b2\u004f\u00de\u00c8" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u009a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0067\u0065\u0074\u0045\u006e\u006f\u0072" +
   "\u006d\u006f\u0075\u0073\u0053\u0074\u0072\u0069" +
   "\u006e\u0067\u0024\u0052\u0065\u0073\u0075\u006c" +
   "\u0074\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0074\u0072\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8e54c4dfcdfe10de =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00de\u0010\u00fe\u00cd\u00df\u00c4\u0054\u008e" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u006d\u0065\u0074\u0068\u006f\u0064\u0057" +
   "\u0069\u0074\u0068\u004e\u0075\u006c\u006c\u0044" +
   "\u0065\u0066\u0061\u0075\u006c\u0074\u0024\u0050" +
   "\u0061\u0072\u0061\u006d\u0073\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0061\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ba9b5a435ab8c73b =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u003b\u00c7\u00b8\u005a\u0043\u005a\u009b\u00ba" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ba\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u006d\u0065\u0074\u0068\u006f\u0064\u0057" +
   "\u0069\u0074\u0068\u004e\u0075\u006c\u006c\u0044" +
   "\u0065\u0066\u0061\u0075\u006c\u0074\u0024\u0052" +
   "\u0065\u0073\u0075\u006c\u0074\u0073\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_eb39e890bfdca0ff =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ff\u00a0\u00dc\u00bf\u0090\u00e8\u0039\u00eb" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0077\u0072\u0069\u0074\u0065\u0054\u006f" +
   "\u0046\u0064\u0024\u0050\u0061\u0072\u0061\u006d" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0066\u0064\u0043\u0061\u0070\u0031\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0064\u0043\u0061\u0070\u0032\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f07678f4b696f170 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0070\u00f1\u0096\u00b6\u00f4\u0078\u0076\u00f0" +
   "\u0019\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u005a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004d" +
   "\u006f\u0072\u0065\u0053\u0074\u0075\u0066\u0066" +
   "\u002e\u0077\u0072\u0069\u0074\u0065\u0054\u006f" +
   "\u0046\u0064\u0024\u0052\u0065\u0073\u0075\u006c" +
   "\u0074\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0066\u0064\u0043\u0061\u0070\u0033\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003f\u00ca\u00f9\u0081\u0035\u007f\u00bb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0065\u0063\u006f\u006e\u0064\u0046\u0064" +
   "\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d3b8766f80ae193b =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u003b\u0019\u00ae\u0080\u006f\u0076\u00b8\u00d3" +
   "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u003b\u0038\u0089\u00cc\u0000\u00fb\u0065\u00b3" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e5\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
   "\u0065\u006e\u0065\u0072\u0069\u0063\u0073\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e8\u002e\u00a9\u00ed\u002e\u0073\u0041\u00f9" +
   "\u0001\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0049\u006e\u0074\u0065\u0072\u0066\u0061\u0063" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u007c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003b\u0019\u00ae\u0080\u006f\u0076\u00b8\u00d3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0076\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003b\u0019\u00ae\u0080\u006f\u0076\u00b8\u00d3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u003b\u0019\u00ae\u0080\u006f\u0076\u00b8\u00d3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u003b\u0019\u00ae\u0080\u006f\u0076\u00b8\u00d3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003b\u0019\u00ae\u0080\u006f\u0076\u00b8\u00d3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0046\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
   "\u0042\u0061\u0072\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f941732eeda92ee8 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e8\u002e\u00a9\u00ed\u002e\u0073\u0041\u00f9" +
   "\u0018\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u003b\u0019\u00ae\u0080\u006f\u0076\u00b8\u00d3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u000f\u0000\u0000\u0000" +
   "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
   "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
   "\u0065\u006e\u0065\u0072\u0069\u0063\u0073\u002e" +
   "\u0049\u006e\u0074\u0065\u0072\u0066\u0061\u0063" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0051\u0075\u0078\u0000\u0000\u0000\u0000\u0000" + "");
}
}

